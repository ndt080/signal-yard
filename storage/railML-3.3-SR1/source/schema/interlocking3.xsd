<?xml  version='1.0' encoding='utf-8' ?>
<xs:schema targetNamespace="https://www.railml.org/schemas/3.3" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:rail3="https://www.railml.org/schemas/3.3" elementFormDefault="qualified" version="3.3">
	<xs:annotation>
		<xs:documentation>Copyright (c) railML.org e.V. Dresden/Germany; All Rights Reserved.&#xD;
&#xD;
This work is licensed under the restricted CreativeCommons Attribution-NonCommercial-NoDerivatives 4.0 International License with additional license conditions of railML.org.&#xD;
&#xD;
For further information see: https://www.railml.org/licence&#xD;
&#xD;
Content of this file: XML Schema for railML(R) 3 definition of elements for interlocking sub schema (IL).</xs:documentation>
	</xs:annotation>
	<xs:include schemaLocation="common3.xsd"/>
	<xs:include schemaLocation="generic3.xsd"/>
	<xs:simpleType name="EndOfTrackTypeList">
		<xs:annotation>
			<xs:documentation>The list of possible supervision limits for the interlocking.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="endOfSupervision">
				<xs:annotation>
					<xs:documentation>This is a virtual end of the track. The supervision (track vacancy proofing) by the signalbox ends here. There are no track assets controlled by the signalbox beyond this point. Thus it is used as routeExit for any route leading into the non-supervised area.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="physicalEnd">
				<xs:annotation>
					<xs:documentation>This is a physical end of the track with a bufferStop. It is used as routeExit for any route leading into this dead end track.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="IPAddress">
		<xs:annotation>
			<xs:documentation>Contains the IP address in IPv4 or IPv6 format.</xs:documentation>
		</xs:annotation>
		<xs:union memberTypes="rail3:IPv4_Address rail3:IPv6_Address rail3:tOtherEnumerationValue"/>
	</xs:simpleType>
	<xs:simpleType name="IPv4_Address">
		<xs:annotation>
			<xs:documentation>IPv4 address string, e.g. "192.168.213.196"</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:pattern value="([0-9]+(\.|$)){4}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="IPv6_Address">
		<xs:annotation>
			<xs:documentation>IPv6 address string</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:pattern value="([A-Fa-f0-9]{1,4}::?){1,7}[A-Fa-f0-9]{1,4}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="LampColourList">
		<xs:annotation>
			<xs:documentation>list of possible colours used for signal lamps</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="blue"/>
			<xs:enumeration value="green"/>
			<xs:enumeration value="magenta"/>
			<xs:enumeration value="orange"/>
			<xs:enumeration value="red"/>
			<xs:enumeration value="violet"/>
			<xs:enumeration value="white"/>
			<xs:enumeration value="yellow"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="LampColourListExt">
		<xs:annotation>
			<xs:documentation>extendible list of possible colours used for signal lamps</xs:documentation>
		</xs:annotation>
		<xs:union memberTypes="rail3:LampColourList rail3:tOtherEnumerationValue"/>
	</xs:simpleType>
	<xs:simpleType name="LampNumberList">
		<xs:list itemType="xs:unsignedLong"/>
	</xs:simpleType>
	<xs:simpleType name="LampTypeList">
		<xs:annotation>
			<xs:documentation>list of possible types of lamp units used for representing an signal aspect</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="doubleFilamentBulb">
				<xs:annotation>
					<xs:documentation>Lamp with one bulb containing two filaments (main+auxiliary), which can be switched independently</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="LED">
				<xs:annotation>
					<xs:documentation>Light Emitting Diode assembly, may be equal to a single filament bulb</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="singleFilamentBulb">
				<xs:annotation>
					<xs:documentation>Lamp with one bulb containing one filament</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="twoSingleFilamentBulbs">
				<xs:annotation>
					<xs:documentation>Lamp with two bulbs each containing one filament used as main and auxiliary filament, which can be switched independently.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="virtual">
				<xs:annotation>
					<xs:documentation>A lamplike connection to Line Encoding Unit for driving a virtual aspect via balise or similar device.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="LampTypeListExt">
		<xs:annotation>
			<xs:documentation>extendible list of possible types of lamp units used for representing an signal aspect</xs:documentation>
		</xs:annotation>
		<xs:union memberTypes="rail3:LampTypeList rail3:tOtherEnumerationValue"/>
	</xs:simpleType>
	<xs:simpleType name="MAC_Address">
		<xs:annotation>
			<xs:documentation>MAC address string</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:pattern value="[a-fA-F0-9]{2}(:[a-fA-F0-9]{2}){5}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="ReleaseSpeedSource">
		<xs:restriction base="xs:string">
			<xs:enumeration value="calculatedOnBoard">
				<xs:annotation>
					<xs:documentation>Indicates that the release speed for the danger point is calculated on board. Corresponds to the ETCS special value for M_RELEASEDP of 126</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="nationalValues">
				<xs:annotation>
					<xs:documentation>Indicates that the release speed for the danger point is taken from national values. Corresponds to the ETCS special value for M_RELEASEDP of 127</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="tAliasString">
		<xs:union memberTypes="rail3:tHexaString rail3:tBitmaskAny"/>
	</xs:simpleType>
	<xs:simpleType name="tAndOr">
		<xs:annotation>
			<xs:documentation>List of boolean operators for use in constructing boolean conditions.&#xD;
Used for concatenating boolean conditions by means of AND/OR. </xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="AND">
				<xs:annotation>
					<xs:documentation>boolean operator for „AND“ combination of two conditions</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="OR">
				<xs:annotation>
					<xs:documentation>boolean operator for „OR“ combination of two conditions</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="XOR">
				<xs:annotation>
					<xs:documentation>boolean operator for „XOR“ combination of two conditions</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="tBitPatternAny">
		<xs:annotation>
			<xs:documentation>string made of "0", "1" or "x" to describe a bit pattern</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:pattern value="[0-1x]*"/>
			<xs:minLength value="1"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="tContactState">
		<xs:annotation>
			<xs:documentation>possible states of a contact, bit or command</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="closed">
				<xs:annotation>
					<xs:documentation>Contact state „closed“ or equal to bit state „1“</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="open">
				<xs:annotation>
					<xs:documentation>Contact state „open“ or equal to bit state „0“</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="tCrossingPosition">
		<xs:annotation>
			<xs:documentation>typical positions of crossings</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="downleft-rightup">
				<xs:annotation>
					<xs:documentation>Description of a logical position of a simple crossing within a route path from the lower left to upper right</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="indifferent">
				<xs:annotation>
					<xs:documentation>The position does not matter for the use.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="upleft-rightdown">
				<xs:annotation>
					<xs:documentation>Description of a logical position of a simple crossing within a route path from the upper left to lower right</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="tDerailerILType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="doubleDerailer">
				<xs:annotation>
					<xs:documentation>a derail device protecting two tracks</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="singleDerailer">
				<xs:annotation>
					<xs:documentation>a derail device protecting one track</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="tDerailingPosition">
		<xs:annotation>
			<xs:documentation>typical positions of a derailing device</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="derailingPosition">
				<xs:annotation>
					<xs:documentation>The derailer is engaged and no vehicle can pass it without getting purposely guided off the running rails.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="indifferent">
				<xs:annotation>
					<xs:documentation>The position does not matter for the use.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="passablePosition">
				<xs:annotation>
					<xs:documentation>The derailer is retreated and can be passed by any vehicle.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="tDetectorStates">
		<xs:annotation>
			<xs:documentation>The list of possible detector states.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="activated">
				<xs:annotation>
					<xs:documentation>state of an triggered detector</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="deactivated">
				<xs:annotation>
					<xs:documentation>state of an untriggered detector</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="inactive">
				<xs:annotation>
					<xs:documentation>state of a detector not available for triggering</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="tDetectorTypeList">
		<xs:annotation>
			<xs:documentation>The list of possible detector types.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="avalanche">
				<xs:annotation>
					<xs:documentation>The detector detects avalanches, which may endanger the railway traffic.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="cranks">
				<xs:annotation>
					<xs:documentation>The detector detects the presence of cranks for switch actuators at their normal storage location, e.g. in a special cabinet at the stationmaster.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="derailment">
				<xs:annotation>
					<xs:documentation>The detector detects any derailed railway vehicle. It is often used in rear of tunnels or bridges to reduce the damages by derailed vehicles.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="doors">
				<xs:annotation>
					<xs:documentation>The detector monitors the closed position of entry doors of equipment rooms</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="fire">
				<xs:annotation>
					<xs:documentation>The detector detects fire or smoke in equipment cabinets or rooms.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="flatWheel">
				<xs:annotation>
					<xs:documentation>The detector detects any flat wheel of a railway vehicle</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="gas">
				<xs:annotation>
					<xs:documentation>The detector detects the excessive concentration of a particular gas in the vicinity</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="hotWheelBox">
				<xs:annotation>
					<xs:documentation>The detector detects any hot axle box of railway vehicles.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="intrusion">
				<xs:annotation>
					<xs:documentation>The detector monitors the access doors to any equipment cabinet or room in order to detect unauthorised access.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="landSlide">
				<xs:annotation>
					<xs:documentation>The detector detects landslides or rockfalls, which may endanger the railway traffic.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="loadingGauge">
				<xs:annotation>
					<xs:documentation>The detector detects any railway vehicle exceeding the loading gauge due to replaced goods or similar.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="weighing">
				<xs:annotation>
					<xs:documentation>The detector checks the axle load of any railway vehicle against a pre-set limit.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="tDetectorTypeListExt">
		<xs:annotation>
			<xs:documentation>The possible list of detector base types with extension point.</xs:documentation>
		</xs:annotation>
		<xs:union memberTypes="rail3:tDetectorTypeList rail3:tOtherEnumerationValue"/>
	</xs:simpleType>
	<xs:simpleType name="tExtentOfControl">
		<xs:annotation>
			<xs:documentation>The Extent of Control is one of full control, steering only, notification only or none.&#xD;
Full control implies that the IL controls the element AND reads the element feedback to check the execution of the control. &#xD;
Notification only means that the IL only reads the status of the object in terms of switch position left, controlled or boolean 1 or derailer engaged.&#xD;
Steering only means that the IL emits the control signal without checking for feedback.&#xD;
Note that LoC=none suggests that the IL has no relation at all with the track asset, indicating a modelling error that merits further investigation and/or explanation.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="fullControl">
				<xs:annotation>
					<xs:documentation>The control of an element is in both directions, i.e. sending commands and receiving element status</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="none">
				<xs:annotation>
					<xs:documentation>There is no control at all, i.e. the element is static</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="notificationOnly">
				<xs:annotation>
					<xs:documentation>The control of an element allows only for receiving the element status</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="steeringOnly">
				<xs:annotation>
					<xs:documentation>The control of an element allows only for sending commands</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="tGateStateList">
		<xs:annotation>
			<xs:documentation>The list of possible states of a (tunnel) gate.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="blockingClosed">
				<xs:annotation>
					<xs:documentation>The gate is in a closed position, which blocks the railway traffic through it.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="passableOpen">
				<xs:annotation>
					<xs:documentation>The gate is in an open position, which allows the passage of railway traffic through it.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="unknown">
				<xs:annotation>
					<xs:documentation>The gate position is not known</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="tGenericAspectList">
		<xs:annotation>
			<xs:documentation>list of possible generic signal aspects (generic meaning)</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="callOn">
				<xs:annotation>
					<xs:documentation>This is used for any auxiliary aspect with the meaning “Pass at reduced speed with clear visibility over the route ahead” because the signal cannot be cleared normally. In most cases such aspect is used with a special call-on route.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="caution">
				<xs:annotation>
					<xs:documentation>This is used for a distant aspect/slave aspect with the meaning “expect Stop” at next signal.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="closed">
				<xs:annotation>
					<xs:documentation>This is used for any aspect with the meaning “Stop here”.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="combinedProceed">
				<xs:annotation>
					<xs:documentation>This is used for any proceed aspect where the master and the slave aspect is combined within one single aspect like this were common in OSShD networks. Of course, this applies only to proceed aspects as with the signal closed no slave aspect is given. For any proceed aspects where a speed restriction is expressed with the master aspect the value 'limitedCombinedProceed' shall be used.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="dark">
				<xs:annotation>
					<xs:documentation>indicates that the signal is switched dark on purpose</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="informative">
				<xs:annotation>
					<xs:documentation>In contrast to supplementary aspects they are giving pure information without any consequences neither to the main aspect nor the train traffic. A failure of this aspect would not affect the main aspect. An example for an informative aspect is any aspect from a direction indicator. It can be also a speed indication if it is relaxing the speed information of the main aspect.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="limitedCombinedProceed">
				<xs:annotation>
					<xs:documentation>This is used for any proceed aspect where the master and the slave aspect is combined within one single aspect like this were common in OSShD networks. It shall be used for any proceed aspects where a speed restriction is expressed with the master aspect.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="limitedProceed">
				<xs:annotation>
					<xs:documentation>This is used for any aspect indicating the allowance to continue running with restricted speed. This is typically used for diverging routes or ones with reduced braking distance. It shall be used only if the aspect itself express already a limitation.&#xD;
In addition this main aspect might be combined with a speed indicator restricting or relaxing the allowed speed against the main aspect.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="markerLight">
				<xs:annotation>
					<xs:documentation>This is used for an aspect solely marking the signal position but without imposing any limitation. It applies for example to aspect used at shunting signals to indicate local operation allowance.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="proceed">
				<xs:annotation>
					<xs:documentation>This is used for any aspect indicating the allowance to continue running without any speed restrictions, i.e. proceed with line speed. However, such aspect can be combined on a signal with a speed indicator restricting the allowed speed against the main aspect.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="repeating">
				<xs:annotation>
					<xs:documentation>The aspect is just the repeating of an aspect of another signal in rear or in advance. This can be the repetition of a distant, shunting or main aspect.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="restriction">
				<xs:annotation>
					<xs:documentation>This aspect gives an additional restriction to the main aspect, i.e. it is used for speed indicator aspects. A failure of such aspect will affect the main aspect of the signal. An example would be a speed indicator restricting the main proceed aspect.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="shuntingProceed">
				<xs:annotation>
					<xs:documentation>This aspect is used for allowance of shunting movements without special limitations.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="slowShunting">
				<xs:annotation>
					<xs:documentation>This aspect is used for allowance of shunting movements but with limited speed only. This may apply for short shunting routes or shunting routes with occupied track sections.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="supplementary">
				<xs:annotation>
					<xs:documentation>These are any additional signal aspects which are combined with the main aspect without causing a restriction or giving pure information. Such combination shall be supervised by the interlocking and a failure will affect the main aspect as well. A good example is an additional indicator announcing the change onto the wrong track, i.e. line track normally used in the opposite direction.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="warning">
				<xs:annotation>
					<xs:documentation>This is used for an announcing aspect/slave aspect with the meaning “expect any kind of proceed” at next signal.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="tGenericResetStrategyList">
		<xs:annotation>
			<xs:documentation>list of generic strategies for resetting a TVD section</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="conditionalReset">
				<xs:annotation>
					<xs:documentation>The section will only be reset, if some conditions are fulfilled. In case of several variants one can include the condition information in the &amp;lt;designator&amp;gt; of the reset strategy. Such conditions can be that the TVD section must be failed or the last counting action of delimiting detection points was “in”.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="procedure">
				<xs:annotation>
					<xs:documentation>This is a placeholder for any other procedure to reset a TVD section.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="sweepRunWithConfirmation">
				<xs:annotation>
					<xs:documentation>Here not just a sweep run is requested, but after the notification of the correct occupation and clearance sequence the operator needs to confirm the result by command before the section is reset within the interlocking.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="sweepRunWithoutConfirmation">
				<xs:annotation>
					<xs:documentation>Especially for axle counter sections a sweep run (de: Bügelfahrt) can be requested. Although the TVD section reset takes place, with receipt of the operator command to the axle counter unit the interlocking keeps it logically failed until a correct occupation and clearance sequence from a passing train is notified from the axle counter. In this case the section is reset immediately without any further operator action.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="unconditionalReset">
				<xs:annotation>
					<xs:documentation>The section will be reset on command without any conditions, i.e. after the reset command was accepted by the interlocking system the TVD section is set to clear/vacant status.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="tGenericRouteTypeExt">
		<xs:annotation>
			<xs:documentation>The list of possible route types with extension point.</xs:documentation>
		</xs:annotation>
		<xs:union memberTypes="rail3:tGenericRouteTypeList rail3:tOtherEnumerationValue"/>
	</xs:simpleType>
	<xs:simpleType name="tGenericRouteTypeList">
		<xs:annotation>
			<xs:documentation>list of possible generic route types</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="auxilliary">
				<xs:annotation>
					<xs:documentation>The route type is used for auxiliary purpose as part of a complete route (from signal to signal). Often it marks a route part at the interface between two signalboxes (block interface) or the interface between a station and open line (line interface).</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="block">
				<xs:annotation>
					<xs:documentation>This route type is used only on open line. These routes are often automatically handled by the interlocking.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="callOn">
				<xs:annotation>
					<xs:documentation>This is a special route type for situations, where the interlocking cannot fully secure the route for a train but safety is established by operator rules.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="nonElectrified">
				<xs:annotation>
					<xs:documentation>This is the route type for securing the path of the trains in the standard way but allows the running path to be without electrification, i.e. it shall be used for diesel or battery trains only.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="normal">
				<xs:annotation>
					<xs:documentation>This is the route type for securing the path of the trains in the standard way</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="occupied">
				<xs:annotation>
					<xs:documentation>The route leads to an already occupied TVD section, i.e. the destination tracks must be occupied</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="shunting">
				<xs:annotation>
					<xs:documentation>Such routes are typically used for splitting or merging formations of railway vehicles with a reduced amount of safety as the train movement is performed on low speed under responsibility of the driver. Parts of the running path can be occupied</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="siding">
				<xs:annotation>
					<xs:documentation>This special route type is used for exit routes with destination of a siding on open line (de: Ausweichanschlussstelle). It is used for automatic release of the key lock associated with the siding.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="tunnel">
				<xs:annotation>
					<xs:documentation>The route leads to a tunnel section, which has restrictions w.r.t. vehicle acceptance, i.e. the vehicles shall be equipped with emergency brake cancellation</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="withoutDependency">
				<xs:annotation>
					<xs:documentation>The route is used when it leads into a non-supervised area, i.e. only the first part is secured by the interlocking. The safety of the complete route path has to be ensured by operator procedures. It applies for example to "telephone block lines", where there is no technical mean to ensure the safe use of the line between two stations but verbal agreement via telephone is used.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="tGroupingTypes">
		<xs:annotation>
			<xs:documentation>list of possible generic element groups</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="automaticRouteSetting">
				<xs:annotation>
					<xs:documentation>Group of signals for activating and deactivating the ARS mode for all elements within the group.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="automaticTrainRouting">
				<xs:annotation>
					<xs:documentation>Group of signals for activating and deactivating the ATR mode for all elements within the group.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="callOn">
				<xs:annotation>
					<xs:documentation>Group of signals for which the simultaneous activation of call-on aspect is not allowed, i.e. only one signal of such a group may be used for call-on at a time. This is used if no particular routes are required for call-on aspect.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="catenary">
				<xs:annotation>
					<xs:documentation>Group of elements which are related to one electrical section of catenary. Although the catenary switch status is normally not commanded from the interlocking, its status may be indicated and considered in interlocking. The related elements shall be reference to TVD sections as representation of track sections, switches etc.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="elementBlocking">
				<xs:annotation>
					<xs:documentation>Group of same type elements that can be blocked or unblocked from operation, e.g. signals.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="emergencyStop">
				<xs:annotation>
					<xs:documentation>Group of signals which can be commanded to stop with one special command</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="switchHeating">
				<xs:annotation>
					<xs:documentation>Group of switches for which the switch heating devices are controlled together</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="switchStaggering">
				<xs:annotation>
					<xs:documentation>Group of switches for which the switch staggering is activated or deactivated together. The switch staggering allows the automatic switching of switches if requested by any route but considering limitations of power supply.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="tGroupingTypesExt">
		<xs:annotation>
			<xs:documentation>The list of possible element group types with extension point.</xs:documentation>
		</xs:annotation>
		<xs:union memberTypes="rail3:tGroupingTypes rail3:tOtherEnumerationValue"/>
	</xs:simpleType>
	<xs:simpleType name="tHexa6String">
		<xs:annotation>
			<xs:documentation>A hexadecimal string starting with "0x" and 6 hexdigits</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:pattern value="0x[0-9A-Fa-f]{6}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="tHexaString">
		<xs:annotation>
			<xs:documentation>A hexadecimal string starting with "0x" and unlimited hexdigits</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:pattern value="0x[0-9A-Fa-f]+|[0-9]"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="tIndicatorPositionList">
		<xs:annotation>
			<xs:documentation>The list of possible positions of a route status indicator within the route.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="end">
				<xs:annotation>
					<xs:documentation>indicator is located at the end of the route path</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="start">
				<xs:annotation>
					<xs:documentation>indicator is located at the start of the route path</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="tIxlInterfaceLocationTypeList">
		<xs:annotation>
			<xs:documentation>The list of possible locations of an interface between two signal boxes.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="atStationBorder">
				<xs:annotation>
					<xs:documentation>The interface between two signal box control areas is located at the station border.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="inStation">
				<xs:annotation>
					<xs:documentation>The interface between two signal box control areas is located within the station.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="onOpenLine">
				<xs:annotation>
					<xs:documentation>The interface between two signal box control areas is located on the open line between two stations.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="tIxlTechnologyTypeList">
		<xs:annotation>
			<xs:documentation>The list of possible technology types of an interlocking (signalbox)</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="digital">
				<xs:annotation>
					<xs:documentation>The signal box/interlocking is operated by digital technology (de: DSTW).</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="electromechanical">
				<xs:annotation>
					<xs:documentation>The signal box/interlocking is operated by electromechanical devices.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="electronic">
				<xs:annotation>
					<xs:documentation>The signal box/interlocking is operated by electronic equipment (de: ESTW).</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="manual">
				<xs:annotation>
					<xs:documentation>The signal box/interlocking is operated manually without any or limited technical support.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="mechanical">
				<xs:annotation>
					<xs:documentation>The signal box/interlocking is operated by mechanical devices.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="relay">
				<xs:annotation>
					<xs:documentation>The signal box/interlocking is operated with relay technology.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="tIxlTechnologyTypeListExt">
		<xs:annotation>
			<xs:documentation>The list of possible interlocking technologies with extension point.</xs:documentation>
		</xs:annotation>
		<xs:union memberTypes="rail3:tIxlTechnologyTypeList rail3:tOtherEnumerationValue"/>
	</xs:simpleType>
	<xs:simpleType name="tKeyLockFunctionList">
		<xs:annotation>
			<xs:documentation>The list of possible usage of a keylock.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="handThrownSwitch">
				<xs:annotation>
					<xs:documentation>The key lock is used to control the position of a manually operated switch within a station</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="sidingProtection">
				<xs:annotation>
					<xs:documentation>The key lock is used to control the position of a manually operated switch used to enter a siding from the open line.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="workZone">
				<xs:annotation>
					<xs:documentation>The key lock is used to control the status of a work zone.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="tKeyLockFunctionListExt">
		<xs:union memberTypes="rail3:tKeyLockFunctionList rail3:tOtherEnumerationValue"/>
	</xs:simpleType>
	<xs:simpleType name="tLevelCrossingControlTypes">
		<xs:annotation>
			<xs:documentation>list of possible types for controlling a level crossing w.r.t. interlocking operation</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="autonomous">
				<xs:annotation>
					<xs:documentation>The level crossing is acting autonomously from interlocking in terms of activation and deactivation. It gives only feedback of its state to the interlocking. This is normally the way of control for level crossings on the open block line not in proximity of stations or operational control points.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="fullControlled">
				<xs:annotation>
					<xs:documentation>The level crossing is activated and deactivated only from interlocking independently of the direction. This is the case for level crossings within stations. The level crossing is activated by route setting and deactivated when the underlying TVD section is released from route.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="halfControlled">
				<xs:annotation>
					<xs:documentation>The level crossing is at least activated from interlocking only for one direction. Deactivation for this direction may be also commanded from interlocking. The remaining functions are autonomous. This applies normally for level crossings on open block line but in proximity of a station. Then the exit direction from the station is controlled from the interlocking.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="manuallyControlled">
				<xs:annotation>
					<xs:documentation>The level crossing is completely controlled by a separate operator but may indicate its status towards the interlocking. This is combined with 'allowsLocalOperation'.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="partiallyControlled">
				<xs:annotation>
					<xs:documentation>The level crossing is mainly operated by a separate operator but can be also operated from the interlocking in a limited way. This is combined with 'allowsLocalOperation'.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="tLevelCrossingState">
		<xs:annotation>
			<xs:documentation>typical states of level crossings</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="closed">
				<xs:annotation>
					<xs:documentation>position of the level crossing when the safe passage by railway traffic is allowed.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="open">
				<xs:annotation>
					<xs:documentation>position of the level crossing when the crossing of track(s) is safe for road traffic.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="unknown">
				<xs:annotation>
					<xs:documentation>position of the level crossing is not known</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="tLocalOperationList">
		<xs:restriction base="xs:string">
			<xs:enumeration value="electrical">
				<xs:annotation>
					<xs:documentation>For the local operation an electrical drive is used.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="mechanical">
				<xs:annotation>
					<xs:documentation>The local operation is made by means of mechanics, e.g. lever with counterweight.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="none">
				<xs:annotation>
					<xs:documentation>There is no possibility of local operation of this device.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="tLocalOperationListExt">
		<xs:union memberTypes="rail3:tLocalOperationList rail3:tOtherEnumerationValue"/>
	</xs:simpleType>
	<xs:simpleType name="tLockState">
		<xs:annotation>
			<xs:documentation>typical states of locking instruments (Masterlock, KeyReleaseInstrument)</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="locked">
				<xs:annotation>
					<xs:documentation>The related element is in a locked stated, i.e. secured in its position for safe railway operation</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="released">
				<xs:annotation>
					<xs:documentation>The related element is not in a locked state.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="tMustOrShould">
		<xs:annotation>
			<xs:documentation>Use this to distinguish hard or soft required states. E.g a called-for switch should be in the given position whilst a flank protection switch must be in the given position.&#xD;
The interlocking normally controls an element into a required position. The enforce-policy expresses what the interlocking must do with the element.&#xD;
enforce=must means that the condition is fulfilled only when the element acquires the given status, enforce=should means that this given status is the preferred status but no conditio sine qua non, finally enforce=none means that the interlocking is not given a desired status; in other words the IL can ignore the given status.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="must">
				<xs:annotation>
					<xs:documentation>flag, that the given state of an element is mandatory</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="none">
				<xs:annotation>
					<xs:documentation>flag, that the given state of an element is neither “must” nor “should”</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="should">
				<xs:annotation>
					<xs:documentation>flag, that the given state of an element is desired but not mandatory</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="tOverlapReleaseCondition">
		<xs:annotation>
			<xs:documentation>The list of possible conditions for release of the overlap.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="startTimerAfterVacating">
				<xs:annotation>
					<xs:documentation>The release timer is triggered when the trigger section becomes clear after sequential occupation. Typically this refers to the section before the last one, i.e. the train has completely entered the last route section.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="startTimerUponOccupation">
				<xs:annotation>
					<xs:documentation>The release timer is triggered when the trigger section becomes sequentially occupied. Typically this refers to the last section of the route.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="trainInitiatedTrigger">
				<xs:annotation>
					<xs:documentation>The release timer is triggered when the train has reported its halt.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="tProtectingSideList">
		<xs:annotation>
			<xs:documentation>list of protection positions related to the area</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="inside">
				<xs:annotation>
					<xs:documentation>the protection of the related element is effective against railway traffic from the inside of an area</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="none">
				<xs:annotation>
					<xs:documentation>the related element gives no protection at all</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="outside">
				<xs:annotation>
					<xs:documentation>the protection of the related element is effective against railway traffic from the outside of an area</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="tProving">
		<xs:annotation>
			<xs:documentation>The list of proving ways.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="continuously">
				<xs:annotation>
					<xs:documentation>the status/position of a related element is continuously checked</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="oneOff">
				<xs:annotation>
					<xs:documentation>the status/position of a related element is only checked at the beginning</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="staffAcknowledged">
				<xs:annotation>
					<xs:documentation>the status/position of a related element is only checked by staff without any technical support</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="tRbcBorderTransitionKind">
		<xs:restriction base="xs:string">
			<xs:enumeration value="accepting">
				<xs:annotation>
					<xs:documentation>RBC at the RBC/RBC border, in which area the ETCS equipped train is entering</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="entry">
				<xs:annotation>
					<xs:documentation>RBC at the border to not ETCS L2 equipped area, when the train is entering the level 2 area</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="exit">
				<xs:annotation>
					<xs:documentation>RBC at the border to not ETCS L2 equipped area, when the train is leaving the level 2 area</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="handover">
				<xs:annotation>
					<xs:documentation>RBC at the RBC/RBC border, from which area the ETCS equipped train is leaving</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="tRelationUsageList">
		<xs:annotation>
			<xs:documentation>The list of functional purposes of any route relation.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="asOppositeSignal">
				<xs:annotation>
					<xs:documentation>the relation marks a signal in opposite direction for the route</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="inFlankProtection">
				<xs:annotation>
					<xs:documentation>the relation marks a related element as used for flank protection of the route</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="inHeadProtection">
				<xs:annotation>
					<xs:documentation>the relation marks a related element as used for head protection of the route, i.e. against railway traffic towards the route exit from opposite direction</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="inOverlapProtection">
				<xs:annotation>
					<xs:documentation>the relation marks a related element as used for protection of the overlap</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="inRunningPath">
				<xs:annotation>
					<xs:documentation>the relation marks a related element as used for an additional condition of the route</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="tRelationUsageListExt">
		<xs:annotation>
			<xs:documentation>The extendable list of functional purposes of any route relation.</xs:documentation>
		</xs:annotation>
		<xs:union memberTypes="rail3:tRelationUsageList rail3:tOtherEnumerationValue"/>
	</xs:simpleType>
	<xs:simpleType name="tRouteConflictTypes">
		<xs:annotation>
			<xs:documentation>The list of possible conflict reasons for two routes.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="conflictingHeadProtection">
				<xs:annotation>
					<xs:documentation>This value is used in case any signal that shall provide flank/head protection to either route is used as route destination for the other route, which is excluded to be simultaneously.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="conflictingOverlap">
				<xs:annotation>
					<xs:documentation>This value is set in case of the overlap of either route causes the conflict.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="conflictingStatus">
				<xs:annotation>
					<xs:documentation>This value is used in case the status of any element like logical device or signal is not in accordance with the needs of the route because of the conflicting route.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="conflictingSwitchPosition">
				<xs:annotation>
					<xs:documentation>This value is used in case any movable element, not only switches, required by the route needs another position then the conflicting route.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="overlappingTVDsection">
				<xs:annotation>
					<xs:documentation>This value is used in case of any TVD section of the route is also used by the conflicting one.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="tRouteConflictTypesExt">
		<xs:union memberTypes="rail3:tRouteConflictTypes rail3:tOtherEnumerationValue"/>
	</xs:simpleType>
	<xs:simpleType name="tSectionVacancy">
		<xs:annotation>
			<xs:documentation>typical states of TVD sections</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="occupied">
				<xs:annotation>
					<xs:documentation>state when the TVD section is occupied by a railway vehicle</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="unknown">
				<xs:annotation>
					<xs:documentation>vacancy state of the TVD section is not known</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="vacant">
				<xs:annotation>
					<xs:documentation>state when the TVD section is clear of any railway vehicle</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="tSecurityLevelList">
		<xs:annotation>
			<xs:documentation>The list of possible command levels w.r.t. to safety operation.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="normal">
				<xs:annotation>
					<xs:documentation>used for normal operator commands with full technical safety by the interlocking</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="vital">
				<xs:annotation>
					<xs:documentation>used for special operator commands where safety mechanisms of the interlocking are intentionally overridden</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="tSecurityLevelListExt">
		<xs:union memberTypes="rail3:tSecurityLevelList rail3:tOtherEnumerationValue"/>
	</xs:simpleType>
	<xs:simpleType name="tSignalFunctionList">
		<xs:annotation>
			<xs:documentation>List of possible signal functions</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="barrage">
				<xs:annotation>
					<xs:documentation>The barrage signal is a special protection signal forming an artificial obstruction &amp;&amp;(de:Sperrsignal). In most cases it is not really a main signal. Examples are the extra protection of level crossings or the case of the destination (berthing) track in a station, when it is divided in two parts, to protect the first train from the following one entering this track.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="block">
				<xs:annotation>
					<xs:documentation>The block signal is used on open line at the start of a block route.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="blockInterface">
				<xs:annotation>
					<xs:documentation>This signal is in most cases a virtual signal used to transfer the actual signalling aspect across the interface between two adjoining signal box areas where a block route crosses this border. In that way it is entry/exit of the partial routes at the border.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="distant">
				<xs:annotation>
					<xs:documentation>The distant signal is announcing the actual aspect of the related main signal. It is positioned in the normal braking distance in rear of the related main signal.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="entry">
				<xs:annotation>
					<xs:documentation>The entry signal is the main signal protecting the entrance of a station from the open line.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="exit">
				<xs:annotation>
					<xs:documentation>The exit signal is the start of a route from within a station onto the open line.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="group">
				<xs:annotation>
					<xs:documentation>The group signal is used within several routes that start not at a main signal as the common main signal. This signal is typically used for exits from a yard where the individual tracks have shunting signals only.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="intermediate">
				<xs:annotation>
					<xs:documentation>The intermediate signal is a main signal within a station neither used for entry nor exit routes.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="intermediateStop">
				<xs:annotation>
					<xs:documentation>This is a special intermediate signal that is used for marking the stopping place. It is used with long berthing tracks in station where the platform is not close to the exit signal.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="junction">
				<xs:annotation>
					<xs:documentation>The junction signal is used at railway junctions, i.e. where route starts towards different railway lines. It shows a different aspect for each set route path depending on the targeted railway line. It is used in path dependent signalling systems like in UK.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="lineInterface">
				<xs:annotation>
					<xs:documentation>This signal is in most cases a virtual signal used to transfer the actual signalling aspect across the interface between the open line and the station route. It is used to concatenate the two parts of a route - exit route within the station and first block route until the first block signal.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="trackEnd">
				<xs:annotation>
					<xs:documentation>Main signal located at the track end (buffer stop) as destination of any routes. It can only show a closed aspect.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="repeater">
				<xs:annotation>
					<xs:documentation>The repeater signal just repeats the aspect of the related signal. Dependent on the IM the related signal can be of different type like main, distant or shunting signal.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="shunting">
				<xs:annotation>
					<xs:documentation>The shunting signal is mainly used in routes for shunting purpose or as indicator for local operation modus. Sometimes the shunting signal is included as intermediate signal in normal train routes.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="tSignalFunctionListExt">
		<xs:union memberTypes="rail3:tSignalFunctionList rail3:tOtherEnumerationValue"/>
	</xs:simpleType>
	<xs:simpleType name="tSignalIndicatorsList">
		<xs:annotation>
			<xs:documentation>The list of possible signal indicators shown on the HMI independent of the related signal.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="cautiousDriving">
				<xs:annotation>
					<xs:documentation>indicating route entry into occupied or dead end track requiring special caution</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="directionIndicator">
				<xs:annotation>
					<xs:documentation>indicates the alphanumerical value for the direction as set from this main signal</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="distantDirectionIndicator">
				<xs:annotation>
					<xs:documentation>shows the alphanumerical value for the direction to be expected on the next main signal</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="distantJunctionIndicator">
				<xs:annotation>
					<xs:documentation>shows the route value to be expected on the next main (junction) signal as used for route signalling</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="distantShortBrakingDistance">
				<xs:annotation>
					<xs:documentation>shows the indication to expect the next main signal will show the indication for a reduced braking distance from the next main signal (PLK: W19)</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="distantSpeedIndicator">
				<xs:annotation>
					<xs:documentation>shows the speed value to be expected on next main signal</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="junctionIndicator">
				<xs:annotation>
					<xs:documentation>indicates the route value as set from this main (junction) signal as used for route signalling</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="shortBrakingDistance">
				<xs:annotation>
					<xs:documentation>indicates that the next main signal follows within reduced braking distance (PLK: W20)</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="speedIndicator">
				<xs:annotation>
					<xs:documentation>indicates the speed value valid from the position of this main signal</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="wrongTrackDriving">
				<xs:annotation>
					<xs:documentation>indicates the change to the track of opposite direction for driving (DV301: Zs7, PLK: W24)</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="tSignalIndicatorsListExt">
		<xs:union memberTypes="rail3:tSignalIndicatorsList rail3:tOtherEnumerationValue"/>
	</xs:simpleType>
	<xs:simpleType name="tSignalVoltageModes">
		<xs:annotation>
			<xs:documentation>The list of possible modes for the control of signal voltage.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="automatic">
				<xs:annotation>
					<xs:documentation>the switchover between the signal voltage levels (day/night) is done automatically</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="manual">
				<xs:annotation>
					<xs:documentation>the switchover between the signal voltage levels (day/night) is done manually</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="nightOnly">
				<xs:annotation>
					<xs:documentation>the signal voltage level is kept on night voltage</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="none">
				<xs:annotation>
					<xs:documentation>no steering of signal voltage levels</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="tStackOrientation">
		<xs:annotation>
			<xs:documentation>Ways of arranging the stack of train number fields</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="horizontal">
				<xs:annotation>
					<xs:documentation>the stack of train number fields is orientated on HMI in horizontal manner</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="vertical">
				<xs:annotation>
					<xs:documentation>the stack of train number fields is orientated on HMI in vertical manner</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="tStackRelation">
		<xs:annotation>
			<xs:documentation>Ways the stack of train number fields is related to the extends of a track element (switch, crossing or track). It defines the type of track element which the train number field stack refers to.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="centerOfTrack">
				<xs:annotation>
					<xs:documentation>the stack of train number fields is related to the centre of a track</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="downLeftBranchOfCrossing">
				<xs:annotation>
					<xs:documentation>the stack of train number fields is related to branch of a crossing at the down left end</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="downRightBranchOfCrossing">
				<xs:annotation>
					<xs:documentation>the stack of train number fields is related to branch of a crossing at the down right end</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="leftBranchOfSwitch">
				<xs:annotation>
					<xs:documentation>the stack of train number fields is related to the left branch of a switch</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="rightBranchOfSwitch">
				<xs:annotation>
					<xs:documentation>the stack of train number fields is related to the right branch of a switch</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="tipOfSwitch">
				<xs:annotation>
					<xs:documentation>the stack of train number fields is related to the tip of a switch</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="upLeftBranchOfCrossing">
				<xs:annotation>
					<xs:documentation>the stack of train number fields is related to branch of a crossing at the down left end</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="upRightBranchOfCrossing">
				<xs:annotation>
					<xs:documentation>the stack of train number fields is related to branch of a crossing at the down left end</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="tStationZonesList">
		<xs:annotation>
			<xs:documentation>The list of possible station zones defined for operation.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="automaticRouteSetting">
				<xs:annotation>
					<xs:documentation>defined operational zone for enabling/disabling of automatic route setting mode</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="automaticTrainRouting">
				<xs:annotation>
					<xs:documentation>defined operational zone for enabling/disabling of automatic train routing mode</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="catenary">
				<xs:annotation>
					<xs:documentation>control of a collection of catenary sections</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="doorAlarm">
				<xs:annotation>
					<xs:documentation>control of a collection of door/intrusion detectors</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="emergencyStopGroup">
				<xs:annotation>
					<xs:documentation>control of a collection of signals applicable for emergency stop command</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="errors">
				<xs:annotation>
					<xs:documentation>control of element error indicators</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="fireAlarm">
				<xs:annotation>
					<xs:documentation>control of a collection of fire detectors</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="handCrank">
				<xs:annotation>
					<xs:documentation>control of a collection of hand cranks</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="inhibitionCheck">
				<xs:annotation>
					<xs:documentation>control of inhibition status a collection of elements</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="keylockIndicator">
				<xs:annotation>
					<xs:documentation>control of a collection of key locks</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="operatingArea">
				<xs:annotation>
					<xs:documentation>control of predefined area within a station to operate from different operator places</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="operatingGroup">
				<xs:annotation>
					<xs:documentation>control of a collection of operating areas</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="operatingMode">
				<xs:annotation>
					<xs:documentation>control of operating permissions for an operating area – centrally/locally operated</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="overallOperatingMode">
				<xs:annotation>
					<xs:documentation>control of operating permissions for all operating areas of the related signal box/interlocking – centrally/locally operated</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="powerSupplyMode">
				<xs:annotation>
					<xs:documentation>control of power supply for signal voltage levels</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="switchHeating">
				<xs:annotation>
					<xs:documentation>control of a collection of switch heating devices</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="switchHeatingTemperatureSensor">
				<xs:annotation>
					<xs:documentation>control of a collection of switch heating temperature sensors</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="switchPositionIndicator">
				<xs:annotation>
					<xs:documentation>control of a collection of switch position indicators</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="switchStaggering">
				<xs:annotation>
					<xs:documentation>control of a switch staggering group</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="temperatureAlarm">
				<xs:annotation>
					<xs:documentation>control of a collection of temperature detection</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="tStationZonesListExt">
		<xs:union memberTypes="rail3:tStationZonesList rail3:tOtherEnumerationValue"/>
	</xs:simpleType>
	<xs:simpleType name="tSwitchPosition">
		<xs:annotation>
			<xs:documentation>typical positions of a point/switch</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="indifferent">
				<xs:annotation>
					<xs:documentation>The position does not matter for the use.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="left">
				<xs:annotation>
					<xs:documentation>position of a switch for use of left branch</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="right">
				<xs:annotation>
					<xs:documentation>position of a switch for use of right branch</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="tTriggerMode">
		<xs:restriction base="xs:string">
			<xs:enumeration value="byOccupation">
				<xs:annotation>
					<xs:documentation>The route release is triggered on occupation of the referred TVD section.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="byOperator">
				<xs:annotation>
					<xs:documentation>The route release is manually triggered by the operator of the referred operational point.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="byTrainStandstill">
				<xs:annotation>
					<xs:documentation>The route release is triggered by train has confirmed its standstill.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="afterVacation">
				<xs:annotation>
					<xs:documentation>The route release is triggered after vacation of the referred TVD section.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="tTriggerModeExt">
		<xs:annotation>
			<xs:documentation>extensible list of possible trigger modes for route release</xs:documentation>
		</xs:annotation>
		<xs:union memberTypes="rail3:tTriggerMode rail3:tOtherEnumerationValue"/>
	</xs:simpleType>
	<xs:simpleType name="tTvdSectionTechnologyType">
		<xs:annotation>
			<xs:documentation>The list of possible technology used for track vacancy detection.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="axleCounter">
				<xs:annotation>
					<xs:documentation>The TVD section is formed by axel counter detection points.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="trackCircuit">
				<xs:annotation>
					<xs:documentation>The TVD section is using track circuit equipment with insulated rail joints or virtual ones as delimiters.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="tTvdSectionTechnologyTypeExt">
		<xs:union memberTypes="rail3:tTvdSectionTechnologyType rail3:tOtherEnumerationValue"/>
	</xs:simpleType>
	<xs:complexType name="ActivationCondition">
		<xs:annotation>
			<xs:documentation>The container to list all possible conditions for activating the level crossing.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:BasicEntityIL">
				<xs:sequence>
					<xs:element name="delayBySwitchPosition" type="rail3:SwitchRelatedDelay" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The activation can be delayed depending on the position of a switch.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="aspectRelatedDelay" type="rail3:AspectRelatedBarrierDelay" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Activation of the level crossing may be delayed, depending on the aspect of the approach signal, thus, the activation delay timer depends on a) the signal and b) the signal aspect.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="signalDelayTime" type="rail3:SignalDelayTime" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>After activation of the level crossing the opening of a signal is delayed.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="activatedBy" type="rail3:ApproachStartingDetector" minOccurs="1" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>The activation of the level crossing is done by a train detection element.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="andOr" use="optional" type="rail3:tAndOr">
					<xs:annotation>
						<xs:documentation>The logical combination of all activation conditions.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ApproachStartingDetector">
		<xs:annotation>
			<xs:documentation>Train detection device, commonly an axle counter, track section, track joint or treadle that activates a level crossing. Also known as Approach Starting. This is the detection point that is the most remote from the level crossing. The approach monitoring zone is situated in between the approach starting detector(s) and the level crossing, i.e. every detector in this zone activates the level crossing. Use the any wildcard to provide a textual description of the approach starting detector is needed.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:BasicEntityIL">
				<xs:sequence>
					<xs:element name="refersTo" type="rail3:EntityILref" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The reference to the train detection element in infrastructure.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="delay" use="required" type="xs:duration">
					<xs:annotation>
						<xs:documentation>The level crossing is activated only after a given delay. This delay doesn't depend on any aspect. If there's a delay that depends on signalled speed, please use the aspectRelatedLevelCrossingDelay.&#xD;
The timer starts running when the first train axle triggers the train detector.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="AspectRelatedBarrierDelay">
		<xs:annotation>
			<xs:documentation>The activation of the level crossing or barrier is delayed by a given duration if a signal shows a given aspect.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:SignalAndAspect">
				
				<xs:attribute name="delay" use="required" type="xs:duration">
					<xs:annotation>
						<xs:documentation>Delay between signal aspect detection and level crossing activation. This delay depends on the signalled speed of the approaching train hence on signal aspect.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="AspectRelation">
		<xs:annotation>
			<xs:documentation>One aspect relation has a) one master signal showing a given aspect b) one or more slaves showing a given aspect. The slave aspect depends on the master aspect. c) an optional overlap when the master aspect is at danger. The path from slave to master may contain switches. The switch positions are given in order to unequivocally determine the path.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:EntityIL">
				<xs:sequence>
					<xs:element name="masterAspect" type="rail3:SignalAndAspect" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The combination of the master signal (at route exit) and the aspect it is showing.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="slaveAspect" type="rail3:SignalAndAspect" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The combination of the slave signal (at route entry) and the aspect it is showing.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="distantAspect" type="rail3:SignalAndAspect" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>The combination of the master's distant signal (within the route or its start) and the aspect it is showing. This is also used for any repeater.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="signalsSpeedProfile" type="rail3:EntityILref" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>The reference to a SpeedSection in infrastructure applicable for the signalled section.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="appliesToRoute" type="rail3:EntityILref" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Reference to the related routes using the particular aspect relation.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="endSectionTime" use="optional" type="xs:duration">
					<xs:annotation>
						<xs:documentation>The end-section of a route is the section between the closed route exit signal and the previous slave signal. Commonly, the interlocking revokes (part of) the route when this time period is passed.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="expectingSpeed" use="optional" type="rail3:tSpeedKmPerHour">
					<xs:annotation>
						<xs:documentation>Maximum signalled speed in km/h at master signal (aka target speed).</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="passingSpeed" use="optional" type="rail3:tSpeedKmPerHour">
					<xs:annotation>
						<xs:documentation>The speed in km/h signalled by the slave aspect, i.e. the speed that the train must respect when passing the slave signal (at route entry).</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="AssetAndGivenState" abstract="true">
		<xs:annotation>
			<xs:documentation>Interlocking model often requires a generic track asset to be in a given state. This base class must be extended and contain a reference to a track asset; signal, section, switch, etc. plus the given status of that element. Eg. (switch_18A, left) or (signal S19, proceed).&#xD;
In addition information about the level of state enforcement can be set.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:BasicEntityIL">
				
				<xs:attribute name="isNegated" use="optional" type="xs:boolean">
					<xs:annotation>
						<xs:documentation>The exclusion of a particular state, i.e. everything else that this one.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="mustOrShould" use="optional" type="rail3:tMustOrShould">
					<xs:annotation>
						<xs:documentation>level of enforcement</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="proving" use="optional" type="rail3:tProving">
					<xs:annotation>
						<xs:documentation>The way the state is proven.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="AssetAndState" abstract="true">
		<xs:annotation>
			<xs:documentation>The interlocking extensively uses assets with a state for securing routes. The AssetAndState class is a generic tupel of (Asset, State). These tupels can be used by more than one interlocking system and are therefore not a child of the Interlocking class but of the class NetworkAssets. AssetAndState extends BaseObject in order to inherit an identifier. This base class must be extended and contain a reference to a track asset; signal, section, switch, etc. plus the given status of that element. Eg. (id=xy, switch_18A, left) or (id=yz, signal S19, proceed).</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:BasicEntityIL">
				
				<xs:attribute name="isNegated" use="optional" type="xs:boolean">
					<xs:annotation>
						<xs:documentation>The exclusion of a particular state, i.e. everything else that this one.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="AssetsForInterlocking">
		<xs:annotation>
			<xs:documentation>Container for assets used for operation of interlockings and controllers. They represent a more functional/logical view onto the railway network but depending on the hardware as defined in infrastructure domain.&#xD;
All assets in one container (asset list) are owned by a single infrastructure manager within the railway network rather than by individual interlocking systems.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:EntityIL">
				<xs:sequence minOccurs="1" maxOccurs="1">
					<xs:element name="tracksIL" type="rail3:TracksIL" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>container for all interlocking track elements</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="endOfTracks" type="rail3:EndOfTracks" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Container for all limits in the network known to the interlocking system</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="tvdSections" type="rail3:TvdSections" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>container for all tvdSection (track vacancy detection) elements</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="switchesIL" type="rail3:SwitchesIL" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>container for all MovableElements of type SwitchIL</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="derailersIL" type="rail3:DerailersIL" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>container for all MovableElements of type DerailerIL</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="movableCrossings" type="rail3:MovableCrossings" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>container for all MovableElements of type MovableCrossing</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="levelCrossingsIL" type="rail3:LevelCrossingsIL" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>container for all levelCrossingIL elements</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="keys" type="rail3:Keys" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>container for all key elements</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="keyLocksIL" type="rail3:KeyLocksIL" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>container for all keyLockIL elements</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="genericDetectors" type="rail3:GenericDetectors" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>container for all genericDetector elements</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="movableBridges" type="rail3:MovableBridges" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>container for all movableBridge elements</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="tunnelGatesIL" type="rail3:TunnelGatesIL" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>container for all tunnelGateIL elements</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="signalIndicators" type="rail3:SignalIndicators" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Container for all additional signal indicators appearing on HMI</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="routeStatusIndicators" type="rail3:RouteStatusIndicators" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>container for virtual logical object used for indication of route status on HMI (route indicators)</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="stationIndicators" type="rail3:StationIndicators" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>container for virtual logical object used for indication and commanding of station related groups or zones on HMI</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="trainNumberFields" type="rail3:TrainNumberFields" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>container for all trainNumberField elements for display of train information on HMI</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="signalsIL" type="rail3:SignalsIL" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>container for all signalIL elements</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="interfaces" type="rail3:Interfaces" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>container for all dedicated physical interface elements to another signalbox, level crossing or other special device</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="workZones" type="rail3:WorkZones" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>container for all workZone elements</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="localOperationAreas" type="rail3:LocalOperationAreas" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>container for all localOperationArea elements</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="shuntingZones" type="rail3:ShuntingZones" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>container for all shuntingZone elements</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="dangerAreas" type="rail3:DangerAreas" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Container for dangerArea elements</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="emergencyStopAreas" type="rail3:EmergencyStopAreas" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Container for emergencyStopArea elements</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="permissionZones" type="rail3:PermissionZones" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>container for all permissionZone elements</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="routeReleaseGroupsAhead" type="rail3:RouteReleaseGroupsAhead" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>container for all routeReleaseGroupAhead elements</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="routeReleaseGroupsRear" type="rail3:RouteReleaseGroupsRear" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>container for all routeReleaseGroupRear elements</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="routes" type="rail3:Routes" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>container for all route elements</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="conflictingRoutes" type="rail3:ConflictingRoutes" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>container for all conflictingRoute elements</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="routeRelations" type="rail3:RouteRelations" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>container for all routeRelation elements</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="combinedRoutes" type="rail3:CombinedRoutes" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>container for all combinedRoute elements</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="overlaps" type="rail3:Overlaps" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>container for all overlap elements</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="dangerPoints" type="rail3:DangerPoints" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>container for all dangerPoints elements</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="destinationPoints" type="rail3:DestinationPoints" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>container for all destinationPoint elements</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="powerSuppliesIL" type="rail3:PowerSuppliesIL" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>container for all powerSupplyIL elements</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="linesideElectronicUnitsIL" type="rail3:LinesideElectronicUnitsIL" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>container element for all linesideElectronicUnitIL elements that belong to the enclosing interlocking</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="AssetsForInterlockings">
		<xs:annotation>
			<xs:documentation>container for individual lists of assets</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="assetsForInterlocking" type="rail3:AssetsForInterlocking" minOccurs="1" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>list of various assets which are related to one single infrastructure manager</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="BarrierDeactivator">
		<xs:annotation>
			<xs:documentation>The train detector and/or TVD section(s) that deactivates the level crossing or other barrier. This may be the level crossing tracks, e.g. km 12.809/2, that would appear on signalling plans.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:BasicEntityIL">
				<xs:sequence>
					<xs:element name="tvdDetectorRef" type="rail3:EntityILref" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The reference to the train detection element in infrastructure or a dedicated TVD section.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="delay" use="required" type="xs:duration">
					<xs:annotation>
						<xs:documentation>Deactivation can be delayed by this timer. Starts counting when the associated TVD section is vacated.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="BasicEntityIL">
		
		<xs:attributeGroup ref="rail3:anyAttribute"/>
	</xs:complexType>
	<xs:complexType name="CodedEntityILref">
		<xs:annotation>
			<xs:documentation>Base type for referencing to other elements but with addition of a possible entityCode. This is mainly used for identifying the particular interface of a command or indication.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:EntityILref">
				
				<xs:attribute name="entityCode" use="optional" type="xs:string">
					<xs:annotation>
						<xs:documentation>It is necessary for the coding of command/indication for relay interlockings. Each command/indication is coded of a byte/bit information, but this coding is different for each interlocking instance and therefore also for each infrastructure element instance</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="CombinedRoute">
		<xs:annotation>
			<xs:documentation>CombinedRoute is a concatenation of single routes providing a continuous path for traffic movement which the interlocking can activate by one action.&#xD;
As routeSequence it is a list of routes describing the train path trough a network.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:RouteObject">
				<xs:sequence>
					<xs:element name="comboEntry" type="rail3:EntityILref" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Reference to the entry/start of the combined route</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="comboExit" type="rail3:EntityILref" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Reference to exit/destination of combined route</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="containsRoute" type="rail3:EntityILref" minOccurs="1" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Reference to a single route contained in the combined route</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="priorityRank" use="optional" type="rail3:tPriority">
					<xs:annotation>
						<xs:documentation>Gives the priority of the path in case there are several possible paths between entry and exit. The highest priority is 0.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="CombinedRoutes">
		<xs:annotation>
			<xs:documentation>container element for all CombinedRoute elements</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="combinedRoute" type="rail3:CombinedRoute" minOccurs="1" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>a concatenation of single routes providing a continuous path for traffic movement</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="CommunicationSettings">
		<xs:annotation>
			<xs:documentation>The settings of the device for communicating in the network of the interlocking system.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:BasicEntityIL">
				<xs:sequence>
					<xs:element name="networkName" type="rail3:Name" minOccurs="0" maxOccurs="1"/>
					<xs:element name="dnsServer" type="rail3:IPv4AddressEntry" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>The IP address of the DNS servers for this device in IPv4 format.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="gatewayIPv4" use="optional" type="rail3:IPv4_Address">
					<xs:annotation>
						<xs:documentation>The IP address of the gateway for the device in IPv4 format.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="hasAssociatedVlan" use="optional" type="xs:unsignedLong">
					<xs:annotation>
						<xs:documentation>The VLAN associated with this communication interface.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="hasIPv4Address" use="optional" type="rail3:IPv4_Address">
					<xs:annotation>
						<xs:documentation>The IP address of the device in IPv4 format.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="hasIPv6Address" use="optional" type="rail3:IPv6_Address">
					<xs:annotation>
						<xs:documentation>The IP address of the device in IPv6 format.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="hasMAC_Address" use="optional" type="rail3:MAC_Address">
					<xs:annotation>
						<xs:documentation>The MAC address of the device in typical format.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="netMaskIPv4" use="optional" type="rail3:IPv4_Address">
					<xs:annotation>
						<xs:documentation>The netmask of the device in IPv4 format.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="numberOfRedundantReplica" use="optional" type="xs:unsignedLong">
					<xs:annotation>
						<xs:documentation>The number of the replica in a set of redundant instances to which these communication settings apply.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="portUDP" use="optional" type="rail3:positiveLong">
					<xs:annotation>
						<xs:documentation>The port number used for UDP communication.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="relatedNetworkInterface" use="optional" type="xs:string">
					<xs:annotation>
						<xs:documentation>Name of Networkinterface used with these settings, e.g. eth0.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ComputerNode" abstract="true">
		<xs:annotation>
			<xs:documentation>Technical description details of the computer used for the asset.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:EntityIL">
				<xs:sequence>
					<xs:element name="hasName" type="rail3:Name" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>particular name and description of the system asset dependent on language</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="hasCommunicationSettings" type="rail3:CommunicationSettings" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>The detail settings of the device for communicating in the network of the interlocking system.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="belongsToOperationalPoint" type="rail3:EntityILref" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>reference to the Operational Point the asset is related to</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="belongsToInfrastructureManager" type="rail3:EntityILref" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>reference to the infrastructure manager the asset belongs to, not needed if asset is under &lt;assetsForInterlocking&gt;</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="elementNumber" use="optional" type="xs:unsignedLong">
					<xs:annotation>
						<xs:documentation>element number of the asset for internal reference in engineering data</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="model" use="optional" type="xs:string">
					<xs:annotation>
						<xs:documentation>The model name of the asset from the supplier.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="softwareVersion" use="optional" type="xs:string">
					<xs:annotation>
						<xs:documentation>The specific software version of the asset itself.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="Configuration">
		<xs:annotation>
			<xs:documentation>general attributes of interlocking configuration</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:BasicEntityIL">
				
				<xs:attribute name="signalSystem" use="optional" type="xs:string">
					<xs:annotation>
						<xs:documentation>The name of the signal system used with this interlocking, e.g. Hl or Ks system of Deutsche Bahn.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="technologyType" use="required" type="rail3:tIxlTechnologyTypeListExt">
					<xs:annotation>
						<xs:documentation>The basic technology type of the interlocking</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ConflictingRoute">
		<xs:annotation>
			<xs:documentation>Iness definition:&#xD;
The route conflict table identifies the routes that may never be simultaneously allocated, due to utilisation of common track elements.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:RouteObject">
				<xs:sequence>
					<xs:element name="refersToRoute" type="rail3:EntityILref" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The reference to the affected route.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="conflictsWithRoute" type="rail3:EntityILref" minOccurs="1" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>The reference to the route causing the conflict.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="reasonForConflict" type="rail3:ConflictReason" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Description of the reason for the conflict.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ConflictingRoutes">
		<xs:annotation>
			<xs:documentation>container element for all ConflictingRoute elements</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="conflictingRoute" type="rail3:ConflictingRoute" minOccurs="1" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>identifies the routes that may never be simultaneously allocated</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ConflictReason">
		<xs:annotation>
			<xs:documentation>The list of applicable conflict reasons for this route pair.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:BasicEntityIL">
				
				<xs:attribute name="origin" use="required" type="rail3:tRouteConflictTypesExt">
					<xs:annotation>
						<xs:documentation>The type of route conflict.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="refersTo" use="required" type="rail3:tRef">
					<xs:annotation>
						<xs:documentation>The reference to the track asset (movable element, TVD section or signal) causing the conflict.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ControlledAssets">
		<xs:annotation>
			<xs:documentation>container for all references to signalboxes/interlockings and system assets controlled by this controller</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:BasicEntityIL">
				<xs:sequence>
					<xs:element name="controlledInterlocking" type="rail3:ControlledSignalBox" minOccurs="1" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>The reference to a signalBox (interlocking) controlled from this unit.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="controlledSystemAsset" type="rail3:SystemAssetConnectedToIL" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>The reference to a system asset controlled from this unit. It shall not repeat system assets already controlled from a particular interlocking.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ControlledSignalBox">
		<xs:annotation>
			<xs:documentation>The control relation from the controller to a signalBox (interlocking)</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:BasicEntityIL">
				<xs:sequence>
					<xs:element name="connectedSignalBox" type="rail3:EntityILref" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The reference to the controlled signalBox</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="extentOfControl" use="optional" type="rail3:tExtentOfControl">
					<xs:annotation>
						<xs:documentation>The control level</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="Controller">
		<xs:annotation>
			<xs:documentation>A controller is an individual terminal, commonly a workstation, that can control the interlocking. The controller is normally situated in a control centre. railML provides a logical link between an interlocking and the individual controller. The user can attach useful data to this link, such as addresses that may be granted control over this IL. railML will not define the nature of the addresses, i.e IP-addresses or hexadecimal address of terminals that communicate with the IL via some serial bus. The protocol (IP, UDP, serial, parallel) is irrelevant to railML. Note that a Control Centre (DE: Leitstelle, FR: Poste de controle, NL: VL-post) is likely to control multiple interlockings and vice versa, one interlocking can be controlled from multiple control centres, an n:m relation. This implies that a control centre can have multiple controllers, defined as a terminal from which a signal man controls an interlocking. The IL is unaware of the Control Centre but aware of the controller.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:ComputerNode">
				<xs:sequence>
					<xs:element name="controlledAssets" type="rail3:ControlledAssets" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The container of references to all signalBox (interlocking) and system assets controlled from this unit.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="routeSequences" type="rail3:RouteSequences" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The container of all route sequences as a combination of single routes defining the path from A to B independent of involved signalBoxes (interlockings).</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="Controllers">
		<xs:annotation>
			<xs:documentation>container element for all controller elements</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="controller" type="rail3:Controller" minOccurs="1" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Container with reference to connected interlockings and system assets controlled by this operational terminal.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="CrossingAndGivenPosition">
		<xs:annotation>
			<xs:documentation>the tuple of references to the movable crossing and its position plus the level of enforcement</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:AssetAndGivenState">
				<xs:sequence>
					<xs:element name="relatedCrossingAndPosition" type="rail3:CrossingAndPosition" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>the tuple of references to the movable crossing and its position</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="CrossingAndPosition">
		<xs:annotation>
			<xs:documentation>Tuple of crossing element and its (logical) position (downleft-rightup/upleft-rightdown).</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:AssetAndState">
				<xs:sequence>
					<xs:element name="refersToCrossing" type="rail3:EntityILref" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The reference to the crossing.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="inPosition" use="required" type="rail3:tCrossingPosition">
					<xs:annotation>
						<xs:documentation>The position the crossing is in.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="CrossingInPosition">
		<xs:annotation>
			<xs:documentation>reference to any movable crossing and its position inside or outside the restricted area required for use and/or protection</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:EntityIL">
				<xs:sequence>
					<xs:element name="givenPosition" type="rail3:CrossingAndGivenPosition" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>the tuple of references to the movable crossing and its position plus the level of enforcement</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="protectingSide" use="optional" type="rail3:tProtectingSideList">
					<xs:annotation>
						<xs:documentation>indication whether the required position is for protection of the area from inside or outside</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="DangerArea">
		<xs:annotation>
			<xs:documentation>An area that may be activated by a sensor (typically one or more avalanche detectors), resulting in&#xD;
the trains typically having to run slowly in case of dangerous conditions ahead.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:RestrictedArea">
				<xs:sequence>
					<xs:element name="detectorInState" type="rail3:DetectorInState" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Required state of the detector to trigger activation of this area.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="signalWithAspect" type="rail3:SignalWithAspect" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Required signals with their aspect to show when this area is activated.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="DangerAreas">
		<xs:sequence>
			<xs:element name="dangerArea" type="rail3:DangerArea" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DangerPoint">
		<xs:annotation>
			<xs:documentation>The danger point defines the position beyond the exit signal up to where a train is likely to be safe.&#xD;
Designed for ETCS modelling.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:RouteObject">
				<xs:sequence>
					<xs:element name="lastSupervisedSectionBeforeDangerPoint" type="rail3:EntityILref" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the reference to last TVD section which is completely before the danger point. It is used when the danger point is situated at the end of a TVD section.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="situatedAtTrackAsset" type="rail3:EntityILref" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the reference to the track asset the danger point is located. It is used when the danger point is situated in the middle of a TVD section or beyond any TVD section in case of not supervised tracks.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="distance" use="optional" type="rail3:tLengthM">
					<xs:annotation>
						<xs:documentation>Distance in metres from exit signal to danger point. Optional because one may also derive this distance from the track asset where the danger point is situated.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="releaseSpeed" use="optional" type="rail3:tSpeedKmPerHour">
					<xs:annotation>
						<xs:documentation>Release speed in km/h associated with the danger point.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="releaseSpeedSource" use="optional" type="rail3:ReleaseSpeedSource">
					<xs:annotation>
						<xs:documentation>Allows specifying that the release speed may be taken from either an onboard calculation or the national values.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="DangerPoints">
		<xs:annotation>
			<xs:documentation>container element for all DangerPoint elements</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="dangerPoint" type="rail3:DangerPoint" minOccurs="1" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>position beyond the exit signal up to where a train is likely to be safe</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DerailerAndGivenPosition">
		<xs:annotation>
			<xs:documentation>the tuple of references to the derailer and its position plus the level of enforcement</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:AssetAndGivenState">
				<xs:sequence>
					<xs:element name="relatedDerailerAndPosition" type="rail3:DerailerAndPosition" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>the tuple of references to the derailer and its position</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="DerailerAndPosition">
		<xs:annotation>
			<xs:documentation>A tuple (derailer, position). Refers to a derailer and a position. Used for expressing concepts like: the derailer has to be in the non-derailing/passable position.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:AssetAndState">
				<xs:sequence>
					<xs:element name="refersToDerailer" type="rail3:EntityILref" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The reference to the derailer.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="inPosition" use="required" type="rail3:tDerailingPosition">
					<xs:annotation>
						<xs:documentation>The position the derailer is in.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="DerailerIL">
		<xs:annotation>
			<xs:documentation>The derailer or trap switch is an infrastructure element that either allows or disallows train passage. A derailer typically operates on one rail only; trap switch (points) have similar effect using both rails to literally derail the train for protection purpose. &#xD;
Derailers that are locally and manually controlled are obviously not within the scope of an interlocking as the dispatcher will typically prevent trains from derailing by blocking signals leading towards such a device</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:MovableElement">
				<xs:sequence>
					<xs:element name="lockedTrack" type="rail3:EntityILref" minOccurs="0" maxOccurs="2">
						<xs:annotation>
							<xs:documentation>The reference to one or two trackIL which are locked by the derailer. These are the tracks beyond the derailer to block any vehicle rolling out from there.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="preferredPosition" use="optional" type="rail3:tDerailingPosition">
					<xs:annotation>
						<xs:documentation>This is the preferred position of the derailer which it is switched to when not in use.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="type" use="optional" type="rail3:tDerailerILType">
					<xs:annotation>
						<xs:documentation>type of derailer from interlocking perspective</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="DerailerInPosition">
		<xs:annotation>
			<xs:documentation>reference to any derailer and its position inside or outside the restricted area required for use and/or protection</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:EntityIL">
				<xs:sequence>
					<xs:element name="givenPosition" type="rail3:DerailerAndGivenPosition" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>the tuple of references to the derailer and its position plus the level of enforcement</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="protectingSide" use="optional" type="rail3:tProtectingSideList">
					<xs:annotation>
						<xs:documentation>indication whether the required position is for protection of the area from inside or outside</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="DerailersIL">
		<xs:sequence>
			<xs:element name="derailerIL" type="rail3:DerailerIL" minOccurs="1" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>The derailer is a track asset that either allows or disallows train passage. Here the functional aspects for interlocking operation are considered.&#xD;
The derailer or trap switch is an infrastructure element that either allows or disallows train passage. A derailer typically operates on one rail only; trap switch (points) have similar effect using both rails to literally derail the train for protection purpose. &#xD;
Derailers that are locally and manually controlled are obviously not within the scope of an interlocking as the dispatcher will typically prevent trains from derailing by blocking signals leading towards such a device</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DestinationPoints">
		<xs:annotation>
			<xs:documentation>container element for all DestinationPoint elements&#xD;
The definition of destination points which are mainly route exits. This allows definition independent of routes.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="destinationPoint" type="rail3:RouteExit" minOccurs="1" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>destination point of a secured running path</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DetectorAndGivenState">
		<xs:annotation>
			<xs:documentation>the tuple of references to the detector and its state plus the level of enforcement</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:AssetAndGivenState">
				<xs:sequence>
					<xs:element name="relatedDetectorAndState" type="rail3:DetectorAndState" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>the tuple of references to the detector and its state</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="DetectorAndState">
		<xs:annotation>
			<xs:documentation>The tuple of reference to a detector and its state.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:AssetAndState">
				<xs:sequence>
					<xs:element name="refersToDetector" type="rail3:EntityILref" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The reference to the particular detector.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="inState" use="required" type="rail3:tDetectorStates">
					<xs:annotation>
						<xs:documentation>The state (activated/deactivated) of the particular detector.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="DetectorInState">
		<xs:annotation>
			<xs:documentation>reference to any detector and its state inside or outside the restricted area required for use</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:EntityIL">
				<xs:sequence>
					<xs:element name="givenState" type="rail3:DetectorAndGivenState" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>the tuple of references to the detector and its state plus the level of enforcement</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="DetectorTypes">
		<xs:annotation>
			<xs:documentation>The generic classification of detector types.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:EntityIL">
				
				<xs:attribute name="detectorType" use="required" type="rail3:tDetectorTypeListExt">
					<xs:annotation>
						<xs:documentation>The classification of the particular detector type.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ElementGroup">
		<xs:annotation>
			<xs:documentation>For operational purpose of the interlocking some elements are grouped together. This allows e.g. commanding them with only one command.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:TrackAsset">
				<xs:sequence>
					<xs:element name="groupType" type="rail3:EntityILref" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The reference to the Infrastructure Manager specific element group type.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="refersToMember" type="rail3:EntityILref" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>The reference to the member element within this group. The member list may be omitted when the referred infrastructure element describes the group/area, e.g. referring to electrificationSection in IS with groupType="catenary".</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="hasStationIndicator" type="rail3:EntityILref" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>reference to the indicator used for showing its status and for commanding</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="refersToInfrastructureElement" type="rail3:EntityILref" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>The reference to an element in infrastructure describing the group/area. In that case the member list may be omitted, e.g. referring to electrificationSection in IS with groupType="catenary".</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="belongsToParent" use="optional" type="rail3:tRef">
					<xs:annotation>
						<xs:documentation>The reference to another ElementGroup used as parent for grouping them together.&#xD;
&#xD;
- if some information exists in parent and child, then information in child overwrites it in child&#xD;
&#xD;
-if some information exists only in parent, then child inherits this information from parent</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ElementGroupingTypes">
		<xs:annotation>
			<xs:documentation>list of possible purposes for element grouping</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:EntityIL">
				
				<xs:attribute name="elementGroupType" use="required" type="rail3:tGroupingTypesExt">
					<xs:annotation>
						<xs:documentation>The classification of the element group.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="EmergencyStopArea">
		<xs:annotation>
			<xs:documentation>(unconditional)emergencyStopArea (isConditional=false): An area that may be activated either by a dispatcher or by a sensor (typically a derailment indicator), resulting in all trains inside and outside the area having to stop.&#xD;
(conditional)emergencyStopArea (isConditional=true): An area that may be activated by a sensor (for instance a fire alarm in a tunnel, to avoid trains outside the tunnel entering), resulting in trains already inside the area (and close to entering) being allowed to continue while trains that are able to stop before entering will be stopped.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:RestrictedArea">
				<xs:sequence>
					<xs:element name="detectorInState" type="rail3:DetectorInState" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Required state of the detector to trigger activation of this area.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="signalWithAspect" type="rail3:SignalWithAspect" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Required signals with their aspect to show when this area is activated.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="keyLockInState" type="rail3:KeyLockInState" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Required key locks with their state to have when this area is activated.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="levelCrossingInState" type="rail3:LevelCrossingInState" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Required level crossings with their state to have when this area is activated.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="isConditional" use="optional" type="xs:boolean">
					<xs:annotation>
						<xs:documentation>Flag for triggering the area by a dedicated detector.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="EmergencyStopAreas">
		<xs:annotation>
			<xs:documentation>Container for EmergencyStopArea elements</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="emergencyStopArea" type="rail3:EmergencyStopArea" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="EndOfTrack">
		<xs:annotation>
			<xs:documentation>The "End of Track" is used for the interlocking system to mark a functional limit. It might be a physical end or just a end of supervision for the interlocking system.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:TrackAsset">
				<xs:sequence>
					<xs:element name="refersTo" type="rail3:EntityILref" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the reference to related in point in functional infrastructure in dependence of the realisation type.&#xD;
In case of "physicalEnd" it refers to a bufferStop. In case of "endOfSupervision" it referes to a trainDetectionElement.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="realisation" use="required" type="rail3:EndOfTrackTypeList">
					<xs:annotation>
						<xs:documentation>The type of realisation of the end of track. The type give information what kind of reference is needed: buffer stop or train detector.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="EndOfTracks">
		<xs:annotation>
			<xs:documentation>Container for all limits in the network known to the interlocking system</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="endOfTrack" type="rail3:EndOfTrack" minOccurs="1" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>The contained limit in the network known to the interlocking system.&#xD;
The "End of Track" is used for the interlocking system to mark a functional limit. It might be a physical end or just a end of supervision for the interlocking system.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="EntityIL">
		<xs:annotation>
			<xs:documentation>base type for normal elements in IL providing attributes @id and @name plus the possibility to add an anyAttribute</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:tElementWithIDandDesignator">
				<xs:sequence>
					<xs:element name="elementState" type="rail3:SubSchemaElementState" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Allows specifying states deviating from the ones specified under //common/states. This is useful for defining elements that will be put into or out of operation while other parts of the resources described in this document stay in the same state, e.g. construction of a new llevel crossing or switch.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attributeGroup ref="rail3:anyAttribute"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="EntityILref">
		<xs:annotation>
			<xs:documentation>base type for referring elements in other parts of the schema providing just attribute @ref plus the possibility to add an anyAttribute</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:tElementWithIDref">
				
				<xs:attributeGroup ref="rail3:anyAttribute"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="EtcsGeneralData">
		<xs:annotation>
			<xs:documentation>list of main ETCS variables of the RBC</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:BasicEntityIL">
				
				<xs:attribute name="mVersion" use="optional" type="xs:unsignedLong">
					<xs:annotation>
						<xs:documentation>Version of the ETCS specification used with this RBC represented by the defined M_Version value.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="nidCountry" use="optional" type="xs:unsignedLong">
					<xs:annotation>
						<xs:documentation>NID_C - Identity number of the country or region: Code used to identify the country or region in which the balise group, the RBC or the RIU is situated. &#xD;
These need not necessarily follow administrative or political boundaries. </xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="nidRadio" use="optional" type="rail3:tHexaString">
					<xs:annotation>
						<xs:documentation>NID_RADIO -  Radio subscriber number: Quoted as a 16 digit decimal number. The number is to be entered “left adjusted” starting with the first digit to be dialled. Padding by the &#xD;
special value F shall be added after the least significant digit of the number.&#xD;
 For further information about NID_RADIO  refer to SUBSET-054.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="nidRadioNetwork" use="optional" type="rail3:tHexa6String">
					<xs:annotation>
						<xs:documentation>NID_MN -  Identity of Radio Network: The NID_MN identifies the GSM-R network the calling mobile station has to register with. The NID_MN consists of up to 6 digits which are entered left adjusted into the data field, the leftmost digit is the digit to be dialled first. In case the NID_MN is shorter than 6 digits, the remaining space is to be filled with special character “F”. For further information about NID_MN refer to Subset-54. </xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="nidRBC" use="optional" type="xs:unsignedLong">
					<xs:annotation>
						<xs:documentation>NID_RBC - RBC ETCS identity number: This variable provides the identity of the RBC belonging to NID_C. The RBC ETCS identity is given by NID_C + NID_RBC. </xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="GenericAspect">
		<xs:annotation>
			<xs:documentation>A signal aspect according to the Infrastructure Manager regulations. Each aspect is given a unique identifier, a name, e.g. Vr-6 and description e.g. warning signal - expect stop (Vorsignal Halt erwarten). This element allows a generic classification of each aspect. The aspect can include speed information.&#xD;
The definition of aspects shall differentiate between the main aspects of the signal object and the aspect of any supplementary signal object (separate screen).</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:EntityIL">
				<xs:sequence>
					<xs:element name="usesLamp" type="rail3:LampRefAspect" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>The list of lamp units used to represent this aspect.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="genericAspect" use="required" type="rail3:tGenericAspectList">
					<xs:annotation>
						<xs:documentation>The classification of the aspect.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="GenericDetector">
		<xs:annotation>
			<xs:documentation>Detectors are devices detecting the exceeding of a particular characteristic and providing an output to the interlocking. Depending on the function it may influence the route signalling.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:LogicalDevice">
				<xs:sequence>
					<xs:element name="detectorType" type="rail3:EntityILref" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The reference to the particular detector type.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="affectsRouteSignalling" use="optional" type="xs:boolean">
					<xs:annotation>
						<xs:documentation>indication whether the signalling of a related route is affected by the detector status</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="allowsPermanentOverride" use="optional" type="xs:boolean">
					<xs:annotation>
						<xs:documentation>The detector output may be permanently overridden by special command.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="allowsSingleOverride" use="optional" type="xs:boolean">
					<xs:annotation>
						<xs:documentation>The detector output may be overridden once by special command.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="hasTriggeredSelfTest" use="optional" type="xs:boolean">
					<xs:annotation>
						<xs:documentation>The detector may have a self-test which is to be triggered from the interlocking.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="selfTestInterval" use="optional" type="xs:duration">
					<xs:annotation>
						<xs:documentation>The interval at which the self-test is running, i.e. automatically initiated or triggered from interlocking.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="selfTestToleranceTime" use="optional" type="xs:duration">
					<xs:annotation>
						<xs:documentation>The time period for which the detector output shall be tolerated due to running self-test.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="GenericDetectors">
		<xs:annotation>
			<xs:documentation>contains all GenericDetector elements</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="genericDetector" type="rail3:GenericDetector" minOccurs="1" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Device for detecting the exceeding of a particular characteristic.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="GenericInfrastructureManager">
		<xs:annotation>
			<xs:documentation>The container for defining the Infrastructure Manager specific type definitions in a generic way. The ref attribute shall refer to an Infrastructure Manager defined in &lt;organisationalUnits&gt; in the common part.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:EntityIL">
				<xs:sequence>
					<xs:element name="belongsToInfrastructureManager" type="rail3:EntityILref" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>reference to the organisational unit acting as the infrastructure manager</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ownsSetsOfAssets" type="rail3:EntityILref" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>The reference to the associated lists of assets. There may be several asset lists but one asset list can only be associated with a single infrastructure manager.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="usesTypes" type="rail3:GenericTypes" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The types defined for this IM.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="GenericInfrastructureManagers">
		<xs:annotation>
			<xs:documentation>container element for all specificInfrastructureManager elements</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="specificInfrastructureManager" type="rail3:GenericInfrastructureManager" minOccurs="1" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Container with the generic classification of types used by a specific infrastructure manager.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="GenericResetStrategy">
		<xs:annotation>
			<xs:documentation>Used by TVD section reset strategy that the Infrastructure Manager regulates. E.g. reset by sweep allowed, manual reset allowed. Note that the IM can apply different reset strategies to sections. Absence of a strategy implies that reset is not possible.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:EntityIL">
				
				<xs:attribute name="resetStrategy" use="required" type="rail3:tGenericResetStrategyList">
					<xs:annotation>
						<xs:documentation>The classification of the reset strategy.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="GenericRouteType">
		<xs:annotation>
			<xs:documentation>For train traffic control different types of routes are used. Each particular type has its Infrastructure Manager specifics which are defined in the operational rules. Here the generic classification is done.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:EntityIL">
				
				<xs:attribute name="genericRouteType" use="required" type="rail3:tGenericRouteTypeExt">
					<xs:annotation>
						<xs:documentation>The classification of the route types.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="GenericTypes">
		<xs:annotation>
			<xs:documentation>The list of all possible types being specific for this IM.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="hasAspect" type="rail3:GenericAspect" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Classification of signal aspects.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="hasTVDresetStrategy" type="rail3:GenericResetStrategy" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Classification of TVD section reset strategies</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="hasRouteType" type="rail3:GenericRouteType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Classification of route types.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="hasLevelCrossingType" type="rail3:LevelCrossingTypeList" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Classification of basic level crossing types.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="hasElementGroupType" type="rail3:ElementGroupingTypes" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Classification of element groups used for operation from the interlock.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="hasDetectorTypes" type="rail3:DetectorTypes" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>The list of detector type classification.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="hasOperatorCommand" type="rail3:OperatorCommand" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>The definition of operator commands used for this infrastructure manager.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="hasHmiIndication" type="rail3:Indication" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>The definition of possible indications on an HMI used for this infrastructure manager.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="hasSignalLamp" type="rail3:SignalLamps" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Definition of possible signal lamp types, their colour and electrical values used for signalisation.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attributeGroup ref="rail3:anyAttribute"/>
	</xs:complexType>
	<xs:complexType name="IndicatingObject" abstract="true">
		<xs:annotation>
			<xs:documentation>virtual logical object used for indication of status on HMI</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:EntityIL">
				<xs:sequence>
					<xs:element name="hasCommand" type="rail3:CodedEntityILref" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>The reference to any possible predefined command of this element.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="hasIndication" type="rail3:CodedEntityILref" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>The reference to any possible predefined indication of this element.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="elementNumber" use="optional" type="xs:unsignedLong">
					<xs:annotation>
						<xs:documentation>number of the element in the set of interlocking data</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="Indication">
		<xs:annotation>
			<xs:documentation>The definition of possible indications on an HMI used for this infrastructure manager.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:EntityIL">
				<xs:sequence>
					<xs:element name="name" type="rail3:Name" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>The full name of the indication in the related language.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="scope" type="rail3:Scope" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>The scope or context in which the indication is used.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="textMessage" type="rail3:Name" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Any text message in a given language related with this indication.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="acronym" use="required" type="xs:NMTOKEN">
					<xs:annotation>
						<xs:documentation>The specific acronym of the indication used within the application of the interlocking system. This is mainly a kind of abbreviation.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="IndicatorAndAspectRef">
		<xs:annotation>
			<xs:documentation>Reference to a signal indicator plus references to related aspects</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:EntityILref">
				
				<xs:attribute name="indicatingAspect" use="required" type="rail3:tRef">
					<xs:annotation>
						<xs:documentation>Reference to the current aspect of this signal indicator. This is a reference to a defined aspect for the &lt;specificInfrastructureManager&gt;.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="InitStatus">
		<xs:annotation>
			<xs:documentation>This is the description of the interface status in command and message direction which is assumed in start-up cases, i.e. when both sides of the system are just powered up.</xs:documentation>
		</xs:annotation>
		
		<xs:attribute name="comString" use="required" type="rail3:tBitPatternAny">
			<xs:annotation>
				<xs:documentation>The status of all outputs as bit string starting with lowest bit. "0"-inactive, "1"-active, "x"-does not matter</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="messString" use="required" type="rail3:tBitPatternAny">
			<xs:annotation>
				<xs:documentation>The status of all inputs as bit string starting with lowest bit. "0"-inactive, "1"-active, "x"-does not matter</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="InputOutput">
		<xs:annotation>
			<xs:documentation>The detailed list of input or output information (closed=1=active, open=0=inactive)</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:BasicEntityIL">
				
				<xs:attribute name="bitNumber" use="optional" type="xs:unsignedLong">
					<xs:annotation>
						<xs:documentation>The order number of the information.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="description" use="optional" type="xs:string">
					<xs:annotation>
						<xs:documentation>The verbal description of the information.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="normalState" use="optional" type="rail3:tContactState">
					<xs:annotation>
						<xs:documentation>The power-off state of the input or output.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="pulseDuration" use="optional" type="xs:duration">
					<xs:annotation>
						<xs:documentation>The pulse width of the input or output if using pulsed information.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="Interface">
		<xs:annotation>
			<xs:documentation>Description of a physical interface with definition of the information to be exchanged in which direction.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:TrackAsset">
				<xs:sequence>
					<xs:element name="command" type="rail3:InputOutput" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>The list of the output information, i.e. commanded to the interfaced unit.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="message" type="rail3:InputOutput" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>The list of input information, i.e. received from the interfaced unit.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="initStatus" type="rail3:InitStatus" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The initial status of commands and messages on the interface in case of "cold start", i.e. a kind of predefined status to be assumed in absence of real information.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="invalidTolerationTime" use="optional" type="xs:duration">
					<xs:annotation>
						<xs:documentation>The time period for which an invalid status of the received messages is tolerated.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="switchoverTolerationTime" use="optional" type="xs:duration">
					<xs:annotation>
						<xs:documentation>The time period for which the received messages are not considered stable due to switching process.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="Interfaces">
		<xs:annotation>
			<xs:documentation>container element for all Interface elements</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="interface" type="rail3:Interface" minOccurs="1" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Description of a physical interface with definition of the information to be exchanged in which direction.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="Interlocking">
		<xs:annotation>
			<xs:documentation>This is the top level element for the interlocking model. It is the home of several elements (classes) containing the particular aspects of the information.</xs:documentation>
		</xs:annotation>
		<xs:sequence minOccurs="1" maxOccurs="1">
			<xs:element name="assetsForInterlockings" type="rail3:AssetsForInterlockings" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>container for all asset elements needed for interlocking purpose</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="controllers" type="rail3:Controllers" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>container for all Controller elements</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="objectControllers" type="rail3:ObjectControllers" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The field elements of signalling systems are controlled by specialised computers - object controllers. This container element is used to collect all object controllers.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="signalBoxes" type="rail3:SignalBoxes" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>container for all SignalBox elements</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="radioBlockCentres" type="rail3:RadioBlockCentres" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>container for all radioBlockCentre elements</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="specificInfrastructureManagers" type="rail3:GenericInfrastructureManagers" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>container for all SpecificInfrastructureManager elements</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="InterlockingInterface">
		<xs:annotation>
			<xs:documentation>The interface between different interlockings is a special object and differs in the amount of information exchanged between the two.&#xD;
If the interlockings are of different type or from different vendor the interface is often made of parallel data exchange and might use relays.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:EntityIL">
				<xs:sequence>
					<xs:element name="lastOwnTvdSection" type="rail3:EntityILref" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The reference to the last TVD section just before the interface.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="firstRemoteTvdSection" type="rail3:EntityILref" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The reference to the first TVD section within the other interlocking beyond the interface.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="incomingRoute" type="rail3:EntityILref" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>This is the reference to all routes the interlocking knows that start at the interface location or in rear of it in direction towards the interlocking.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="outgoingRoute" type="rail3:EntityILref" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>This is the reference to all routes the interlocking knows that end at the interface location or in advance of it in direction towards the other interlocking.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="hasInterface" type="rail3:EntityILref" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the reference to the description of the physical interface with commands and messages transmitted.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="interfaceLocation" use="required" type="rail3:tIxlInterfaceLocationTypeList">
					<xs:annotation>
						<xs:documentation>The topology view of interface location determining the extent of information to be exchanged.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="isOnCommandSide" use="optional" type="xs:boolean">
					<xs:annotation>
						<xs:documentation>True means the related interlocking uses the described commands for output towards the partner. With false it is inverted for the related interlocking.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="IPv4AddressEntry">
		
		<xs:attribute name="address" use="required" type="rail3:IPv4_Address"/>
	</xs:complexType>
	<xs:complexType name="Key">
		<xs:annotation>
			<xs:documentation>An abstract key to unlock a device or decode a message.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:EntityIL">
				<xs:sequence>
					<xs:element name="isPhysical" type="xs:boolean" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The key can be of physical type, i.e. key for a mechanical lock.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="KeyLockIL">
		<xs:annotation>
			<xs:documentation>A device, also known as key lock (de: Schlüsselschalter) situated near the track. It is used to request local control of a (group of) track assets from the interlocking. Commonly, staff requests local control from the interlocking via this device. Once granted, the key can be removed upon which the (group of) track asset is no longer under interlocking control. In reverse, the interlocking takes back control when the key is inserted and staff acknowledged relinquishing control. Note that the lock is a track asset defined in infrastructure namespace. The interlocking reads the state of the lock and returns permission to remove the key, i.e. levelOfControl=fullControl. A combined lock has a master lock that controls a set of slave locks. Slave locks may have to be released in a well-defined sequence.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:LogicalDevice">
				<xs:sequence>
					<xs:element name="acceptsKey" type="rail3:EntityILref" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The reference to the particular key used with this master lock.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="hasTvdSection" type="rail3:EntityILref" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The reference to the TVD section related to this master lock. This is especially used for siding key locks on open line.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="hasSlaveLock" type="rail3:EntityILref" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>reference to a dependent KeyReleaseInstrument</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="function" use="optional" type="rail3:tKeyLockFunctionListExt">
					<xs:annotation>
						<xs:documentation>The functional element the keylock is controlling.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="hasAutomaticKeyLock" use="optional" type="xs:boolean">
					<xs:annotation>
						<xs:documentation>The key may be automatically relocked when returned into the lock. Thus the key can be used only once.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="hasAutomaticKeyRelease" use="optional" type="xs:boolean">
					<xs:annotation>
						<xs:documentation>The key of a siding on open line may be released automatically when the related TVD section (trigger) becomes occupied.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="keyAuthoriseTime" use="optional" type="xs:duration">
					<xs:annotation>
						<xs:documentation>The time period the key release is active after commanded by the operator. Afterwards a not removed key will be automatically relocked again.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="keyRequestTime" use="optional" type="xs:duration">
					<xs:annotation>
						<xs:documentation>The time period a request for key release is indicated to the operator.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="KeyLockInState">
		<xs:annotation>
			<xs:documentation>reference to any key lock and its state inside or outside the restricted area required for use and/or protection</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:EntityIL">
				<xs:sequence>
					<xs:element name="givenState" type="rail3:LockAndGivenState" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>the tuple of references to the key lock and its state plus the level of enforcement</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="protectingSide" use="optional" type="rail3:tProtectingSideList">
					<xs:annotation>
						<xs:documentation>indication whether the required state is for protection of the area from inside or outside</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="KeyLocksIL">
		<xs:annotation>
			<xs:documentation>container element for all KeyLockIL elements</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="keyLockIL" type="rail3:KeyLockIL" minOccurs="1" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>A device for locking a key which is released from interlocking or by using a master key.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="Keys">
		<xs:annotation>
			<xs:documentation>container element for all Key elements</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="key" type="rail3:Key" minOccurs="1" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>An ancillary element used for operation of a specific locking device. </xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="LampEvaluation">
		
		<xs:attribute name="lampNumbers" use="required" type="rail3:LampNumberList">
			<xs:annotation>
				<xs:documentation>A list of lamp numbers separated by spaces. This is expected to refer to the same numbers specified at //signalIL/hasLamp/@number or //signalIndicator/hasLamp/ @number</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ref" use="required" type="rail3:tRef">
			<xs:annotation>
				<xs:documentation>Reference to the signal aspect that is evaluated by the enclosing LEU</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="LampRefAspect">
		<xs:annotation>
			<xs:documentation>Reference and usage of signal lamp within an aspect</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:EntityILref">
				
				<xs:attribute name="flashing" use="required" type="xs:boolean">
					<xs:annotation>
						<xs:documentation>Flag, whether the lamp is used flashing for this signal aspect</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="frequency" use="optional" type="rail3:tFrequencyHertz">
					<xs:annotation>
						<xs:documentation>Frequency in Hertz of the lamp flashing for this aspect.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="LampRefSignal">
		<xs:annotation>
			<xs:documentation>Reference to a signal lamp installed on the screen.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:EntityILref">
				
				<xs:attribute name="number" use="required" type="rail3:positiveLong">
					<xs:annotation>
						<xs:documentation>The number of the signal lamp on the screen starting with 1 at top left position going to the right for each row like zig-zag</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="LevelCrossingAndGivenState">
		<xs:annotation>
			<xs:documentation>the tuple of references to the level crossing and its state plus the level of enforcement</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:AssetAndGivenState">
				<xs:sequence>
					<xs:element name="relatedLevelCrossingAndState" type="rail3:LevelCrossingAndState" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>the tuple of references to the level crossing and its state</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="LevelCrossingAndState">
		<xs:annotation>
			<xs:documentation>A tuple of Level Crossing and its position.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:AssetAndState">
				<xs:sequence>
					<xs:element name="refersToLevelCrossing" type="rail3:EntityILref" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The reference to the level crossing.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="inState" use="required" type="rail3:tLevelCrossingState">
					<xs:annotation>
						<xs:documentation>The state (open/closed) the level crossing has.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="LevelCrossingIL">
		<xs:annotation>
			<xs:documentation>A level crossing (LX) is activated, i.e. requested to close for road traffic, upon train approach. This happens when the train crosses a detection point, i.e. an insulated track joint, axle counter or treadle. These approach detectors are commonly referred to as Approach Starting (AS).</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:TrackAsset">
				<xs:sequence>
					<xs:element name="hasInterface" type="rail3:EntityILref" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Reference to physical description of level crossing interface with list of commands to the field and notifications from the field</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="isLevelCrossingType" type="rail3:EntityILref" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Reference to the basic type of level crossing. It refers to a basic configuration of a level crossing for this IM.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="refersTo" type="rail3:EntityILref" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The reference to the physical level crossing in infrastructure.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="deactivatedBy" type="rail3:BarrierDeactivator" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>The description of deactivation conditions for this level crossing.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="activationCondition" type="rail3:ActivationCondition" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Description of the possible activation conditions of this level crossing.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="hasTvdSection" type="rail3:EntityILref" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>The reference to the TVD section(s) directly at the level crossing</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="hasLevelCrossingTrack" type="rail3:EntityILref" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Reference to the track elements (TrackIL) which are used to indicate the level crossing status related to this track.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="constantWarningTime" use="optional" type="xs:duration">
					<xs:annotation>
						<xs:documentation>A level crossing must cause as little as possible hindering to train as well as road traffic. Therefore, the level crossing must close as late as safely possible. The optimal delay, known as constant warning time, between activation and closing is possible when the train speed and position are known.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="maximumClosedTime" use="optional" type="xs:duration">
					<xs:annotation>
						<xs:documentation>This is the time span after a message to the operator is triggered because a level crossing being closed for too long time can be considered as unsafe. In such cases the road drivers and pedestrians might try to cross the railway line illegally.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="minimumOpenTime" use="optional" type="xs:duration">
					<xs:annotation>
						<xs:documentation>This is the time the level crossing has to be open before it is allowed to close again. This is to ensure a certain capacity for the crossing road traffic.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="preferredPosition" use="optional" type="rail3:tLevelCrossingState">
					<xs:annotation>
						<xs:documentation>This is the state of level crossing under normal conditions, i.e. when not in use. For most level crossings this would be the open state.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="requiresStopBeforeUnprotectedLevelCrossing" use="optional" type="xs:boolean">
					<xs:annotation>
						<xs:documentation>Flag to define whether any train needs to stop in front of the level crossing in case it is unprotected. Only afterwards it can proceed according the value in speedRestriction.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="typicalTimeToClose" use="required" type="xs:duration">
					<xs:annotation>
						<xs:documentation>Average time between the time a train detector notes an approaching train and the moment the level crossing is closed to road traffic, i.e. the moment that the interlocking can lock a route across the level crossing. This equates to the time it takes to close the barrier (if present). Should be set to 0 if no barrier is configured. Useful for simulation.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="typicalTimeToOpen" use="optional" type="xs:duration">
					<xs:annotation>
						<xs:documentation>Average time between the time the deactivation is triggered and the moment the level crossing is open to road traffic, i.e. the moment that the level crossing reports open state. This equates to the time it takes to open the barrier (if present) and to deactivate road signals. Useful for simulation and timetable calculations.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="LevelCrossingInState">
		<xs:annotation>
			<xs:documentation>reference to any level crossing and its state inside the restricted area required for use</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:EntityIL">
				<xs:sequence>
					<xs:element name="givenState" type="rail3:LevelCrossingAndGivenState" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>the tuple of references to the level crossing and its state plus the level of enforcement</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="LevelCrossingsIL">
		<xs:annotation>
			<xs:documentation>container element for all LevelCrossingIL elements</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="levelCrossingIL" type="rail3:LevelCrossingIL" minOccurs="1" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>The level crossing is a track asset allowing road traffic to cross the railway track in a secure way on the same level. Here the functional aspects for interlocking operation are considered.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="LevelCrossingTypeList">
		<xs:annotation>
			<xs:documentation>The level crossings have some basic features which can be specified independent of the particular manufacturer. Most important is the control type saying how the control relation between the interlocking and the level crossing is.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:EntityIL">
				
				<xs:attribute name="allowsLocalOperation" use="optional" type="xs:boolean">
					<xs:annotation>
						<xs:documentation>The level crossing may have a control unit which allows local operation from the field.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="controlType" use="required" type="rail3:tLevelCrossingControlTypes">
					<xs:annotation>
						<xs:documentation>The classification of the control type w.r.t. the interlocking operation.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="hasBarrier" use="optional" type="xs:boolean">
					<xs:annotation>
						<xs:documentation>The level crossing may be equipped with barriers for road traffic.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="hasTrafficWarning" use="optional" type="xs:boolean">
					<xs:annotation>
						<xs:documentation>The level crossing may be equipped with audible/optical means to allow warning of road traffic.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="LinesideElectronicUnitIL">
		<xs:complexContent>
			<xs:extension base="rail3:TrackAsset">
				<xs:sequence>
					<xs:element name="refersTo" type="rail3:EntityILref" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Reference to the lineside electronic unit from the functional infrastructure</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:choice minOccurs="0" maxOccurs="unbounded">
						<xs:element name="evaluatesSignalLamp" type="rail3:LampEvaluation" minOccurs="1" maxOccurs="1">
							<xs:annotation>
								<xs:documentation>The LEU is wired into the circuits of the signal lamps with the numbers specified here of the referenced signal.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="evaluatesSignalIndicatorLamp" type="rail3:LampEvaluation" minOccurs="1" maxOccurs="1">
							<xs:annotation>
								<xs:documentation>The LEU evaluated the signal lamps with the numbers given here of the references signal indicator.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:choice>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="LinesideElectronicUnitsIL">
		<xs:sequence>
			<xs:element name="linesideElectronicUnitIL" type="rail3:LinesideElectronicUnitIL" minOccurs="1" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Use to specify the interlocking aspects of a LEU</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="LocalOperationArea">
		<xs:annotation>
			<xs:documentation>Area used for local shunting movements without routes. Movable elements within the area might be operated from onsite panels. These areas are predefined for parts of a station.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:RestrictedArea">
				<xs:sequence>
					<xs:element name="deactivationKey" type="rail3:EntityILref" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>reference to any physical device (key or button) used for deactivate the local operation area after use</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="switchInPosition" type="rail3:SwitchInPosition" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>reference to any switch and its position inside or outside the local operation area required for use and/or protection</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="derailerInPosition" type="rail3:DerailerInPosition" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>reference to any derailer and its position inside or outside the local operation area required for use and/or protection</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="crossingInPosition" type="rail3:CrossingInPosition" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>reference to any movable crossing and its position inside or outside the local operation area required for use and/or protection</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="detectorInState" type="rail3:DetectorInState" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>reference to any detector and its state inside or outside the local operation area required for use</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="signalWithAspect" type="rail3:SignalWithAspect" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>reference to any signal and its aspect inside or outside the local operation area required for use and/or protection</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="keyLockInState" type="rail3:KeyLockInState" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>reference to any key lock and its state inside or outside the local operation area required for use and/or protection</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="levelCrossingInState" type="rail3:LevelCrossingInState" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>reference to any level crossing and its state inside the local operation area required for use</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="releasedForLocalOperation" type="rail3:EntityILref" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>reference to any switchable element (keylock, switch, derailer, level crossing etc.), which is released for local operation, when the local operation area is active</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="LocalOperationAreas">
		<xs:sequence>
			<xs:element name="localOperationArea" type="rail3:LocalOperationArea" minOccurs="1" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Area used for local shunting movements without routes. Movable elements within the area might be operated from onsite panels.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="LockAndGivenState">
		<xs:annotation>
			<xs:documentation>the tuple of references to the key lock or bascule bridge and its state plus the level of enforcement</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:AssetAndGivenState">
				<xs:sequence>
					<xs:element name="relatedLockAndState" type="rail3:LockAndState" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>the tuple of references to the locked device and its state</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="LockAndState">
		<xs:annotation>
			<xs:documentation>The tuple of Masterlock/KeyReleaseInstrument and its states</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:AssetAndState">
				<xs:sequence>
					<xs:element name="refersToKeyLock" type="rail3:EntityILref" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The reference to the Masterlock or Keylock.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="inState" use="required" type="rail3:tLockState">
					<xs:annotation>
						<xs:documentation>The state (locked/released) the key release instrument has.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="LogicalDevice" abstract="true">
		<xs:annotation>
			<xs:documentation>The logical device applies any number of Boolean equations. It represents e.g. a complex relay circuit or PLC that converts high/low electric input signals from any source into Boolean true/false outputs. It can exchange binary i/o with the interlocking. The description attribute can contain textual description of the field elements and Boolean relations that produce the Boolean output. Use this for ancillary equipment connected to the interlocking, e.g. bascule bridges, tunnel equipment, detectors such as earthquake and flooding detectors. Finally it provides a state which is considered in interlocking operation.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:TrackAsset">
				<xs:sequence>
					<xs:element name="takesControlOf" type="rail3:EntityILref" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>The reference to one or more track assets which are controlled by this logical object.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="hasInterface" type="rail3:EntityILref" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The reference to the physical I/O-interface from interlocking to the locking device to control it.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="refersTo" type="rail3:EntityILref" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The reference to the physical device in the infrastructure.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="description" use="optional" type="xs:string">
					<xs:annotation>
						<xs:documentation>Description of the logic.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="MovableBridge">
		<xs:annotation>
			<xs:documentation>A special movable bridge (undercrossing) which is used for railway traffic passing a waterway underneath the railway line in normal position but allows for temporarily being moved out of the way of the vessels. It is then not passable by trains.&#xD;
The normal position is locked and supervised by interlocking system. The other control of the bridge is outside the interlocking system.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:LogicalDevice">
				
				<xs:attribute name="technicalClosingTime" use="optional" type="xs:duration">
					<xs:annotation>
						<xs:documentation>The time for the technical closing process of the bridge.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="technicalOpenTime" use="optional" type="xs:duration">
					<xs:annotation>
						<xs:documentation>The time needed for the opening process of the bridge.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="typicalNonPassableTime" use="optional" type="xs:duration">
					<xs:annotation>
						<xs:documentation>The typical time period the bridge is not passable during traversal of a vessel.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="MovableBridges">
		<xs:annotation>
			<xs:documentation>container for all basculeBridge elements</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="movableBridge" type="rail3:MovableBridge" minOccurs="1" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>A special movable bridge (undercrossing) which is used for railway traffic passing a waterway underneath the railway line in normal position but allows for temporarily being moved out of the way of the vessels. It is then not passable by trains.&#xD;
The normal position is locked and supervised by interlocking system. The other control of the bridge is outside the interlocking system.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="MovableCrossing">
		<xs:annotation>
			<xs:documentation>Crossings are a special item for interlockings as a position is required for them even if there is no really movable item trackside.&#xD;
Some crossings, especially high speed ones, have a movable frog to close the gap at the crossing (UK: movable nose crossing, DE: Herzstück mit beweglicher Spitze, NL: kruising met beweegbaar puntstuk). Unlike a switch, such a movable frog will not send the train left or right but it does guide the train. Thus the position is essential for avoiding derailment. Do not confound this class with ordinary double or single slip switches. The latter are regarded as two back-to-back switches.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:MovableElement">
				<xs:sequence>
					<xs:element name="branchUpLeft" type="rail3:EntityILref" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Referral to the physical track that connects from upper left side to the crossing.&#xD;
This reference may be provided as reference to a &lt;trackIL&gt; or to a &lt;netElement&gt;. It is however encouraged to use references to &lt;netElement&gt; here, as it is the more general solution and is forseen to be the only remaining allowed type of reference from 3.4 onward.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="branchUpRight" type="rail3:EntityILref" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Referral to the physical track that connects from upper right side to the crossing.&#xD;
This reference may be provided as reference to a &lt;trackIL&gt; or to a &lt;netElement&gt;. It is however encouraged to use references to &lt;netElement&gt; here, as it is the more general solution and is forseen to be the only remaining allowed type of reference from 3.4 onward.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="branchDownLeft" type="rail3:EntityILref" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Referral to the physical track that connects from lower left side to the crossing.&#xD;
This reference may be provided as reference to a &lt;trackIL&gt; or to a &lt;netElement&gt;. It is however encouraged to use references to &lt;netElement&gt; here, as it is the more general solution and is forseen to be the only remaining allowed type of reference from 3.4 onward.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="branchDownRight" type="rail3:EntityILref" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Referral to the physical track that connects from lower right side to the crossing.&#xD;
This reference may be provided as reference to a &lt;trackIL&gt; or to a &lt;netElement&gt;. It is however encouraged to use references to &lt;netElement&gt; here, as it is the more general solution and is forseen to be the only remaining allowed type of reference from 3.4 onward.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="hasFoulingTrainDetectors" type="rail3:EntityILref" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>This is the reference to the train detectors delimiting the TVD section of this crossing, which are too close and cannot guarantee a clear gauge of the set track.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="preferredPosition" use="optional" type="rail3:tCrossingPosition">
					<xs:annotation>
						<xs:documentation>This is the preferred position of the crossing which it is switched to when not in use.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="MovableCrossings">
		<xs:sequence>
			<xs:element name="movableCrossing" type="rail3:MovableCrossing" minOccurs="1" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Crossings are a special item for interlockings as a position is required for them even if there is no really movable item trackside. Here the functional aspects for interlocking operation are considered.&#xD;
Here both simple crossings and crossings with movable frog are considered.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="MovableElement" abstract="true">
		<xs:annotation>
			<xs:documentation>Abstract element defining the attributes common to movable elements. The movable element refers to TrackAsset, thus creating a link to the IS namespace.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:TrackAsset">
				<xs:sequence>
					<xs:element name="refersTo" type="rail3:EntityILref" minOccurs="1" maxOccurs="2">
						<xs:annotation>
							<xs:documentation>Reference to the physical movable element in the infrastructure.&#xD;
Only in case of derailer there may be a second reference to an infrastructure object (derailer over two tracks).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="hasGaugeClearanceMarker" type="rail3:EntityILref" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>the reference to any gauge clearance marker in infrastructure, i.e. &lt;trainDetectionElement&gt; with @type="clearancePoint"</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="hasTvdSection" type="rail3:EntityILref" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Reference to the underlying TVD section of the movable element</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="connectedToPowerSupply" type="rail3:EntityILref" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>relation to power supply for controlling the number of simultaneously switched switch actuators</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="relatedMovableElement" type="rail3:EntityILref" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>reference to other movable element in case of single/double slip switch or coupled switch</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="isKeyLocked" use="optional" type="xs:boolean">
					<xs:annotation>
						<xs:documentation>One of boolean true or false. True means that the switch is clamped either mechanically or by any electric or electronic means. The interlocking shall never attempt to throw a clamped switch.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="localOperated" use="optional" type="rail3:tLocalOperationListExt">
					<xs:annotation>
						<xs:documentation>This gives information, whether the derailer is locally operated independent of any &lt;signalBox&gt;.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="maxThrowTime" use="optional" type="xs:duration">
					<xs:annotation>
						<xs:documentation>Maximum time in milliseconds during which the IL can drive the element. If it has not reached end-position before this timer expires, the interlocking stops throwing as to prevent damage.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="numberOfBladeSwitchActuators" use="optional" type="xs:unsignedLong">
					<xs:annotation>
						<xs:documentation>number of switch actuators controlled from interlocking to throw the switch blades, 0 means no direct operation from the interlocking</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="numberOfFrogSwitchActuators" use="optional" type="xs:unsignedLong">
					<xs:annotation>
						<xs:documentation>number of switch actuators controlled from interlocking to throw the frog nose(s), 0 means no movable frog</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="returnsToPreferredPosition" use="optional" type="xs:boolean">
					<xs:annotation>
						<xs:documentation>The automatic normalisation attribute is closely related to the preferred position. Whether or not the IL returns the element to its preferred position depends on this parameter. E.g. a derailer that is modelled as ... preferredPosition=engaged autoNormalisation=true ... will return to its engaged position when released. A switch modelled as preferredPosition=right autoNormalisation=false... will not automatically return to the right position when released. This combination of attributes is useful for geographical interlockings that automatically determine the preferred routes given the preferred position of intervening switches.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="typicalThrowTime" use="optional" type="xs:duration">
					<xs:annotation>
						<xs:documentation>typical throw time is the average time it takes between the moment the IL receives the call and the element reaches the new position. Switch throwing adds a delay to route setting that is of great interest to the use case simulation. For this purpose, we add an attribute typicalThrowTime that allows capacity planners to estimate the influence of slow throwing switches on train traffic. Note that this excludes controller (OCS) processing time and communication between controller (OCS) and interlocking.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ObjectController">
		<xs:annotation>
			<xs:documentation>Definition of Object Controller as ComputerNode</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:ComputerNode">
				<xs:sequence>
					<xs:element name="controlsTrackAsset" type="rail3:TrackAssetConnectedToIL" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>References to track assets controlled by this object controller. Track assets are elements that are derived from TrackAsset, such as levelCrossingIL, linesideElectronicUnitIL, signalIL, trackIL, tvdSection, etc.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ObjectControllers">
		<xs:annotation>
			<xs:documentation>Container for Object Controller elements</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="objectController" type="rail3:ObjectController" minOccurs="1" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>An object controller is a computer device that is used to control track assets in the field.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="OperatorCommand">
		<xs:annotation>
			<xs:documentation>The definition of operator commands used for this infrastructure manager.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:EntityIL">
				<xs:sequence>
					<xs:element name="name" type="rail3:Name" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>The full name of the operator command in the related language.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="scope" type="rail3:Scope" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>The scope or context in which the command is used.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="textMessage" type="rail3:Name" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Any text message in a given language related with this operator command.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="acronym" use="required" type="xs:NMTOKEN">
					<xs:annotation>
						<xs:documentation>The specific acronym of the operator command used within the application of the interlocking system. This is mainly a kind of abbreviation.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="securityLevel" use="optional" type="rail3:tSecurityLevelListExt">
					<xs:annotation>
						<xs:documentation>The distinction of the security level of the command, which implies possible additional measures like registration or special notice.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="Overlap">
		<xs:annotation>
			<xs:documentation>INESS (INtegrated European Signalling System) definition: A defined section of track in advance of a stop signal, or a stopping point in a continuous signalling system, which must be kept clear to avoid the risk of collision should a train inadvertently run past the signal or the stopping point.&#xD;
Many IMs require overlap beyond active routes to protect from overshoot. One or more sections beyond the exit signal are locked out from use by other routes. The overlap is delimited by train detectors. Facing switches in the overlap are locked, otherwise, use the swinging overlap. Trailing switches in the overlap may normally not locked. Note that there is no need to explicitly identify the switches in the overlap because they can be derived from the begin and endpoints of the overlap.&#xD;
The overlap can be released if the RBC deems that an approaching train is slow enough such that overshoot is unlikely.&#xD;
Trains other than the one for which the route-overlap is locked may be attributed a permitted speed in the overlap. If the value is set to 0 it is not possible to set a route through the overlap. Compare this variable with the release speed that applies to the train that is being released beyond the danger point.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:RouteObject">
				<xs:sequence>
					<xs:element name="activeForApproachRoute" type="rail3:EntityILref" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>The reference to the related route using the overlap.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="relatedToTrackAsset" type="rail3:EntityILref" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Alternatively to a specific route a reference to a track asset the overlap is related to can be given. This can be a destination signal of a route or any other suitable object.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="requiresSwitchInPosition" type="rail3:SwitchAndGivenPosition" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>The reference to any switch in the overlap required to be in a particular position and its position.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="requiresLevelCrossingInState" type="rail3:LevelCrossingAndGivenState" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>The reference to any level crossing in the overlap required to be in a particular state and its state.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="hasTvdSection" type="rail3:EntityILref" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>The reference to any TVD section(s) within the path of the overlap.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="isLimitedBy" type="rail3:EntityILref" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>References to track assets limiting the overlap. It may be used in conjunction to attribute length.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="overlapRelease" type="rail3:OverlapRelease" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Overlap is set in lockstep with the route. The interlocking releases the overlap when it is safe to presume that an approaching train will not overrun a closed destination signal. When the train occupied the last section (or destination area), an overlap release timer starts running. The timer value is defined by operational rules and the approaching speed. Upon expiry, the interlocking releases the overlap. Overlap is released together with the route or after expiration of the release timer. Overlap is released after a defined time in a timer that starts from a timerTriggerPoint.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="additionalRelation" type="rail3:RelationReference" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>reference to additional route relations specific for this overlap, e.g. flank protection</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="length" use="optional" type="rail3:tLengthM">
					<xs:annotation>
						<xs:documentation>Alternatively to a particular limit the length of the overlap in metres can be given.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="overlapSpeed" use="optional" type="rail3:tSpeedKmPerHour">
					<xs:annotation>
						<xs:documentation>Maximum speed in the overlap in km/h for other trains than the one using the related route.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="overlapTimerStartLocation" use="optional" type="rail3:tLengthM">
					<xs:annotation>
						<xs:documentation>Distance from the overlap timer start location to the End of Movement Authority in metres</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="overlapValidityTime" use="optional" type="xs:duration">
					<xs:annotation>
						<xs:documentation>The overlap validity time is the time that the train assumes the overlap to be locked. This is the ETCS validity time T_OL.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="releaseSpeed" use="optional" type="rail3:tSpeedKmPerHour">
					<xs:annotation>
						<xs:documentation>Release speed in km/h associated with the overlap</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="releaseSpeedSource" use="optional" type="rail3:ReleaseSpeedSource">
					<xs:annotation>
						<xs:documentation>Allows specifying that the release speed may be taken from either an onboard calculation or the national values.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="OverlapRelease">
		<xs:annotation>
			<xs:documentation>Overlap is set in lockstep with the route. The interlocking releases the overlap when it is safe to presume that an approaching train will not overrun a closed destination signal. When the train occupied the last section (or destination area), an overlap release timer starts running. The timer value is defined by operational rules and the approaching speed. Upon expiry, the interlocking releases the overlap. Overlap is released together with the route or after expiration of the release timer. Overlap is released after a defined time in a timer that starts from a timerTriggerPoint.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:EntityIL">
				<xs:sequence>
					<xs:element name="releaseTriggerSection" type="rail3:EntityILref" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The reference to the TVD section triggering the overlap release.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="overlapReleaseTimer" type="rail3:OverlapReleaseTimer" minOccurs="1" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Description of overlap release timer (duration, start condition)</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="OverlapReleaseTimer">
		<xs:annotation>
			<xs:documentation>Details for timing the overlap release.</xs:documentation>
		</xs:annotation>
		
		<xs:attribute name="overlapReleaseCondition" use="optional" type="rail3:tOverlapReleaseCondition">
			<xs:annotation>
				<xs:documentation>The condition to start the release timer.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="timerValue" use="required" type="xs:duration">
			<xs:annotation>
				<xs:documentation>The time period which has to be elapsed after the trigger condition and physical release of the overlap.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="rail3:anyAttribute"/>
	</xs:complexType>
	<xs:complexType name="Overlaps">
		<xs:annotation>
			<xs:documentation>container element for all Overlap elements</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="overlap" type="rail3:Overlap" minOccurs="1" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>track(s) in advance of a stop signal, or a stopping point in a continuous signalling system, which must be kept clear to avoid the risk of collision should a train inadvertently run past the signal or the stopping point</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PartialRoute" abstract="true">
		<xs:annotation>
			<xs:documentation>A partial route is a subset of TVD sections within the route. This subset can be used, e.g. for release if the conditions prescribed by the Infrastructure Manager rules are fulfilled.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:RouteObject">
				<xs:sequence>
					<xs:element name="hasTvdSection" type="rail3:EntityILref" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Referral to the TVD sections in this part of the route.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="delay" use="optional" default="PT0S" type="xs:duration">
					<xs:annotation>
						<xs:documentation>Duration after which the IL releases the partial route. Starts counting from the moment that all the conditions for release are fulfilled. This delay is engineered in static data. If not defined, the IL releases the group without delay.&#xD;
If the route has only one route release group then the set of TVD sections in the route is released en bloc with the delay given here.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="typicalDelay" use="optional" type="xs:duration">
					<xs:annotation>
						<xs:documentation>Duration after which the partial route is typically released. Use this delay for simulation purposes. Starts counting from the moment that the interlocking has received all conditions for the release. E.g. TVD sections in the group have been vacated, timers expired.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="PermissionZone">
		<xs:annotation>
			<xs:documentation>A restricted area inside a station which can be controlled from a different controller as the rest of the station&#xD;
&#xD;
- if some information exists in parent and child, then information in child overwrites it in child&#xD;
&#xD;
-if some information exists only in parent, then child inherits this information from parent</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:TrackAsset">
				<xs:sequence>
					<xs:element name="canBeControlledBy" type="rail3:EntityILref" minOccurs="1" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>reference to any controller, which can control this permission zone</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="controlledElement" type="rail3:EntityILref" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>References to elements which belong to this zone and have the same operating permission</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="belongsToParent" use="optional" type="rail3:tRef">
					<xs:annotation>
						<xs:documentation>The reference to another permissionZone used as parent for grouping them together.&#xD;
&#xD;
- if some information exists in parent and child, then information in child overwrites it in child&#xD;
&#xD;
-if some information exists only in parent, then child inherits this information from parent</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="PermissionZones">
		<xs:sequence>
			<xs:element name="permissionZone" type="rail3:PermissionZone" minOccurs="1" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>A set of track assets inside a station which can have different operating permissions (being controlled from a different controller) as the rest of the station</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PowerSuppliesIL">
		<xs:annotation>
			<xs:documentation>container element for all PowerSupplyIL elements</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="powerSupplyIL" type="rail3:PowerSupplyIL" minOccurs="1" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>specific features of power supply used for interlocking</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PowerSupplyIL">
		<xs:annotation>
			<xs:documentation>Interlocking specific features of the power supply</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:SystemAsset">
				<xs:sequence>
					<xs:element name="hasModeIndicator" type="rail3:EntityILref" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>reference to the powerSupplyMode-Indicator</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="numberOfSimultaneousSwitchingActuators" use="optional" type="xs:unsignedLong">
					<xs:annotation>
						<xs:documentation>maximum number of switch actuators that can be activated simultaneously with this power supply</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="signalVoltageMode" use="optional" type="rail3:tSignalVoltageModes">
					<xs:annotation>
						<xs:documentation>normal mode of switching signal voltage for day and night voltage</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="RadioBlockCentre">
		<xs:annotation>
			<xs:documentation>The characteristics of an individual radioBlockCentre element (RBC)</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:ComputerNode">
				<xs:sequence>
					<xs:element name="etcsGeneralData" type="rail3:EtcsGeneralData" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>list of main ETCS variables of the RBC</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="isLimitedByRadioBlockCentreBorder" type="rail3:RbcBorderRef" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>References to RBC border elements defined in functionalInfrastructure.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="containedTrackAssets" type="rail3:EntityILref" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>References to the track assets known to the RBC.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="hasCommand" type="rail3:CodedEntityILref" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Reference to any general command available for the RBC</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="hasIndication" type="rail3:CodedEntityILref" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Reference to any general indication available for the RBC</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="connectedSignalBox" type="rail3:EntityILref" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Reference to connected signal boxes providing the interlocking functions</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="RadioBlockCentres">
		<xs:annotation>
			<xs:documentation>container for all radioBlockCenter elements</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="radioBlockCentre" type="rail3:RadioBlockCentre" minOccurs="1" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Container with the characteristics of an individual radioBlockCenter element</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="RbcBorderRef">
		<xs:complexContent>
			<xs:extension base="rail3:EntityILref">
				
				<xs:attribute name="kindOfTransition" use="optional" type="rail3:tRbcBorderTransitionKind"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="RelationReference">
		<xs:annotation>
			<xs:documentation>The reference to any additional relation needed for signalling of this route with the addition of functional purpose</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:EntityILref">
				
				<xs:attribute name="usage" use="required" type="rail3:tRelationUsageListExt">
					<xs:annotation>
						<xs:documentation>functional purposes of a relation</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="RepeaterSignal">
		<xs:annotation>
			<xs:documentation>container for reference to a repeater signal of this signal</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:EntityILref">
				
				<xs:attribute name="number" use="required" type="xs:unsignedLong">
					<xs:annotation>
						<xs:documentation>sequence number of the repeater signal</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="RestrictedArea" abstract="true">
		<xs:annotation>
			<xs:documentation>The Restricted Area (RA) is an area of the yard that the interlocking can set aside from normal operation. Railway personnel typically take local control of a RA and the interlocking detects switches and signal such that regular trains cannot enter the RA. Typical Restricted Areas are local shunting areas, working area or possession areas. Local workers take over control of the RA from the interlocking. The type of RA defines the extent of control, i.e. what the interlocking allows local workers to do. E.g. regulations may allow local route setting in a shunting area but not in a working zone. Track workers may be allowed to operate individual switches in a working zone but they cannot set routes. Therefore, the interlocking must be aware of the RA type. This type datatype is abstract so the user is forced to specialize it.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:TrackAsset">
				<xs:sequence>
					<xs:element name="isLimitedBy" type="rail3:EntityILref" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Reference to any asset in network forming the restricted area limits</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="trackAssetInArea" type="rail3:EntityILref" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Reference to any track asset in network contained in the restricted area.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="belongsToParent" use="optional" type="rail3:tRef">
					<xs:annotation>
						<xs:documentation>The reference to another RestrictedArea of the same type used as parent to group them together.&#xD;
&#xD;
- if some information exists in parent and child, then information in child overwrites it in child&#xD;
&#xD;
-if some information exists only in parent, then child inherits this information from parent</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="Route">
		<xs:annotation>
			<xs:documentation>We define a route as an entry- and exit plus the positions of intermediate switches. If there are no switches in the route, no switch positions can be defined. If one or more switches are encountered en route, either facing or trailing, the positions of these switches must be given. There can be multiple routes from entry to exit depending on the positions of the intermediate switches. The user is free to create different routes with the same entry,exit and same switch positions that differ only by the classifier. This allows one to distinguish for example a traction-route from no-traction-route</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:RouteObject">
				<xs:sequence>
					<xs:element name="handlesRouteType" type="rail3:EntityILref" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>The reference to the Infrastructure Manager specific route type. This implies particular characteristics of the route dependent on the Infrastructure Manager operational rules.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="routeActivationSection" type="rail3:RouteActivationSection" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Description of the route activation, i.e. automatic setting or locking when the route entry is approached.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="facingSwitchInPosition" type="rail3:SwitchAndPosition" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>The tuple for each facing switch in the running path to unambiguously define the route containing the reference to the switch and its position.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="trailingSwitchInPosition" type="rail3:SwitchAndPosition" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>The tuple for each trailing switch in the running path to supporting definition of the route containing the reference to the switch and its position.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="hasTvdSection" type="rail3:EntityILref" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>The reference to TVD section(s) within the running path of the route.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="routeEntry" type="rail3:RouteEntry" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Description of the start point of the route. This is normally a signal.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="intermediateCodePoint" type="rail3:EntityILref" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Reference to TrackIL or SwitchIL element between Entry and Exit in order to define the running path.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="hasReleaseGroup" type="rail3:EntityILref" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>The references to any partial routes which are to be released together within a group.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="switchPositionInDepartureTrack" type="rail3:SwitchAndPosition" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>The tuple for any switch in the track in rear of the start signal required for this route containing the reference to the switch and its position.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="routeExit" type="rail3:RouteExit" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Description of the route destination point. In most cases the route destination is a signal or a buffer stop. </xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="additionalRelation" type="rail3:RelationReference" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>reference to any additional relation needed for signalling of this route with the addition of functional purpose</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="approachReleaseDelay" use="optional" type="xs:duration">
					<xs:annotation>
						<xs:documentation>The delay between the request from signalman to release an already approached (definitely locked) route and the real release of associated elements of the route.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="locksAutomatically" use="optional" type="xs:boolean">
					<xs:annotation>
						<xs:documentation>If true, the interlocking locks this route automatically and immediately after it was cleared. The operator has to intervene if he wishes to call another route. Automatikfahrstrasse in German, trace automatique in French. Note that this functionality is often part of the control system in which case this attribute should be omitted.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="priorityRank" use="optional" type="rail3:tPriority">
					<xs:annotation>
						<xs:documentation>Gives the priority of the route path in case there are several possible paths between entry and exit. The highest priority is 0.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="proceedAspectDelay" use="optional" type="xs:duration">
					<xs:annotation>
						<xs:documentation>The delay for the signal before it will change from closed to any proceed aspect.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="processingDelay" use="optional" type="xs:duration">
					<xs:annotation>
						<xs:documentation>The delay in seconds between the moment the interlocking receives the route call and the moment the route the interlocking reports back that the route is locked, i.e. the processing time for setting that route.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="residualRouteReleaseDelay" use="optional" type="xs:duration">
					<xs:annotation>
						<xs:documentation>The delay after commanding the release of the remaining route parts until the route elements are finally released.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="signalClosureDelay" use="optional" type="xs:duration">
					<xs:annotation>
						<xs:documentation>The delay for the signal after the conditions for proceed aspect are removed and the physical closure of the signal.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="RouteActivationSection">
		<xs:annotation>
			<xs:documentation>The route is locked, i.e. activated, when this sections turns from vacant to occupied. If the delayForLock timer isn't given (or zero) the lock applies immediately.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:EntityIL">
				<xs:sequence>
					<xs:element name="activationSection" type="rail3:EntityILref" minOccurs="1" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>This is the reference to the TVD section activating the route when this section turns from vacant to occupied.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="automaticReleaseDelay" use="optional" type="xs:duration">
					<xs:annotation>
						<xs:documentation>Delay in seconds between the moment that the route is locked on the ground that the approach section turned occupied, and the release of the route. This delay for automatic release would typically be used when an approach train stops in an approach section but fails to enter the route.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="delayForLock" use="optional" type="xs:duration">
					<xs:annotation>
						<xs:documentation>The delay in seconds between the moment the approach section changes from vacant to occupied and the moment the route the interlocking locks the route.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="RouteEntry">
		<xs:annotation>
			<xs:documentation>The route entry is normally a (virtual) signal.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:RouteObject">
				<xs:sequence>
					<xs:element name="refersTo" type="rail3:EntityILref" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The reference to the track asset representing the start point of the route. In most cases this is a signal.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="hasIndicator" type="rail3:EntityILref" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>reference to virtual logical object used for indication of route status on HMI at route start</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="hasSignalIndicator" type="rail3:EntityILref" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Reference to an additional signal indicator which appears on the HMI near the route entry.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="nonReplacement" type="rail3:EntityILref" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>The reference to any TVD section in advance to the start signal which sequential occupation will not cause the signal closure.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="RouteExit">
		<xs:annotation>
			<xs:documentation>The exit signal or any other track asset that acts as route exit</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:RouteObject">
				<xs:sequence>
					<xs:element name="refersTo" type="rail3:EntityILref" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The reference to the track asset representing the destination point of the route. In most cases this is a signal or buffer stop.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="hasIndicator" type="rail3:EntityILref" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>reference to virtual logical object used for indication of route status on HMI at route destination</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="hasDangerPoint" type="rail3:EntityILref" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>The reference to any danger point related to this route end.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="hasOverlap" type="rail3:EntityILref" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>The reference to any overlap related to this route end.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="hasRouteReleaseTrigger" type="rail3:RouteReleaseTrigger" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="RouteObject">
		<xs:complexContent>
			<xs:extension base="rail3:EntityIL">
				<xs:sequence>
					<xs:element name="objectName" type="rail3:Name" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>name and description of the object dependent on the language</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="belongsToOperationalPoint" type="rail3:EntityILref" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>references to the Operational Points the objects are related to</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="hasCommand" type="rail3:CodedEntityILref" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>The reference to any possible predefined command of this object.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="hasIndication" type="rail3:CodedEntityILref" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>The reference to any possible predefined indication of this object.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="elementNumber" use="optional" type="xs:unsignedLong">
					<xs:annotation>
						<xs:documentation>element number of the object for internal referencing in the engineering data</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="RouteRelation">
		<xs:annotation>
			<xs:documentation>A route relation states the conditions that must be fulfilled for a given signal to be open. Note that these relations may well be captured in a control table. Therefore, the use is optional.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:RouteObject">
				<xs:sequence>
					<xs:element name="requiredSwitchPosition" type="rail3:SwitchAndGivenPosition" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>References to a particular switch and its required position to fulfil the route relation</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="requiredDerailerPosition" type="rail3:DerailerAndGivenPosition" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>References to a particular derailer and its required position to fulfil the route relation</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="requiredCrossingPosition" type="rail3:CrossingAndGivenPosition" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>References to a particular movable crossing and its required position to fulfil the route relation</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="requiredDetectorState" type="rail3:DetectorAndGivenState" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>References to a particular detector and its required state to fulfil the route relation</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="requiredSignalAspect" type="rail3:SignalAndGivenAspect" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>References to a particular signal and its required aspect to fulfil the route relation</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="requiredSectionState" type="rail3:SectionAndGivenVacancy" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>References to a particular TVD section and its required state to fulfil the route relation</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="requiredKeyLockState" type="rail3:LockAndGivenState" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>References to a particular key lock or bascule bridge and its required state to fulfil the route relation</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="requiredLevelCrossingState" type="rail3:LevelCrossingAndGivenState" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>References to a particular level crossing and its required state to fulfil the route relation</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="requiredTunnelGateState" type="rail3:TunnelGateAndGivenState" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>References to a particular tunnel gate and its required state to fulfil the route relation</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="RouteRelations">
		<xs:annotation>
			<xs:documentation>container element for all RouteRelation elements</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="routeRelation" type="rail3:RouteRelation" minOccurs="1" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>states the conditions that must be fulfilled for a given signal to be open</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="RouteReleaseGroupAhead">
		<xs:annotation>
			<xs:documentation>A route section is a partial route situated ahead of a train. In order to prevent that a stopped train locks down the remaining route, such a partial route can be released. Condition for release are expiry of a timer and/or an operator command as prescribed by the Infrastructure Manager rules and regulations. This is especially used for ERTMS Movement Authority sections.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:PartialRoute">
				
				<xs:attribute name="isAutomatic" use="optional" type="xs:boolean">
					<xs:annotation>
						<xs:documentation>True if the route is released automatically after expiry of the delay. False otherwise, e.g. operator intervention is required.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="RouteReleaseGroupRear">
		<xs:annotation>
			<xs:documentation>Ordered set of TVD sections in rear of the train.&#xD;
Partial route, i.e. a set of TVD sections in rear of the train that is released as a group if given safety conditions are fulfilled. Partial route release can be delayed to improve safety. Route release groups can be associated with several routes.&#xD;
Release can be retarded by a given delay.&#xD;
If a route that has one single route release group then the route is released as a whole. In this case, there is no need to explicitly define the TVD sections that are part of this release group.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:PartialRoute">
				
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="RouteReleaseGroupsAhead">
		<xs:sequence>
			<xs:element name="routeReleaseGroupAhead" type="rail3:RouteReleaseGroupAhead" minOccurs="1" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>One or more TVD sections as part of the route which can be released in a group ahead of the train in standstill.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="RouteReleaseGroupsRear">
		<xs:sequence>
			<xs:element name="routeReleaseGroupRear" type="rail3:RouteReleaseGroupRear" minOccurs="1" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>One or more TVD sections as part of the route which can be released in a group in rear of passing train.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="RouteReleaseTrigger">
		<xs:annotation>
			<xs:documentation>Reference to the trigger element (refersTo=TVP section) and conditions for final route release.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:EntityILref">
				
				<xs:attribute name="endSectionTimerStartLocation" use="optional" type="rail3:tLengthM">
					<xs:annotation>
						<xs:documentation>Distance from the End section timer start location to the End of Movement Authority in metres</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="hasTriggerMode" use="optional" type="rail3:tTriggerModeExt">
					<xs:annotation>
						<xs:documentation>The trigger mode in relation with the reference (refersTo) for the route release.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="timerValue" use="optional" type="xs:duration">
					<xs:annotation>
						<xs:documentation>Timer value for any delay of route release after triggering.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="Routes">
		<xs:annotation>
			<xs:documentation>container element for all Route elements</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="route" type="rail3:Route" minOccurs="1" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>path for train movements in railway network secured by interlocking system</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="RouteSequences">
		<xs:annotation>
			<xs:documentation>container for all routeSequence elements describing train paths through the network</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="routeSequence" type="rail3:CombinedRoute" minOccurs="1" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>RouteSequence is a combination of single routes defining the path from A to B independent of involved signalBoxes (interlockings).</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="RouteStatusIndicator">
		<xs:annotation>
			<xs:documentation>Instance of a virtual logical object used for indication of route status on HMI</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:IndicatingObject">
				
				<xs:attribute name="positionInRoute" use="optional" type="rail3:tIndicatorPositionList">
					<xs:annotation>
						<xs:documentation>This marks the position of the indicator in the route in case not clear by reference from routeEntry or routeExit. It is related to the functions the indicator will fulfil.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="RouteStatusIndicators">
		<xs:annotation>
			<xs:documentation>container for virtual logical object used for indication of route status on HMI</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="routeStatusIndicator" type="rail3:RouteStatusIndicator" minOccurs="1" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>virtual logical object used for indication of route status on HMI</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="Scope">
		<xs:annotation>
			<xs:documentation>The scope or context in which the command or the indication is used.</xs:documentation>
		</xs:annotation>
		
		<xs:attribute name="alias" use="optional" type="rail3:tAliasString">
			<xs:annotation>
				<xs:documentation>The alias is the binary token of this command or indication represented as hex-string or bit-mask.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="validFor" use="required" type="xs:string">
			<xs:annotation>
				<xs:documentation>The type name of the device the command or indication is valid for. This may be the type of a particular interlocking or a controlling system.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="SectionAndGivenVacancy">
		<xs:annotation>
			<xs:documentation>the tuple of references to the TVD section and its state plus the level of enforcement</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:AssetAndGivenState">
				<xs:sequence>
					<xs:element name="relatedSectionAndVacancy" type="rail3:SectionAndVacancy" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>the tuple of references to the TVD section and its state plus the level of enforcement</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="SectionAndVacancy">
		<xs:annotation>
			<xs:documentation>Tuple of a track vacancy detection section and its state (occupied, vacant)</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:AssetAndState">
				<xs:sequence>
					<xs:element name="refersToSection" type="rail3:EntityILref" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The reference to the TVD section.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="inState" use="required" type="rail3:tSectionVacancy">
					<xs:annotation>
						<xs:documentation>The occupation status of the TVD section.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ShuntingZone">
		<xs:annotation>
			<xs:documentation>Simple zone defined for shunting movements. It can be used to define any shunting zones.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:RestrictedArea">
				
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ShuntingZones">
		<xs:sequence>
			<xs:element name="shuntingZone" type="rail3:ShuntingZone" minOccurs="1" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Simple zone defined for shunting movements.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="SignalAndAspect">
		<xs:annotation>
			<xs:documentation>A tuple (signal, aspect). Refers to a signal and an aspect. Used for expressing concepts like signal 1105 shows yellow flashing.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:AssetAndState">
				<xs:sequence>
					<xs:element name="refersToSignal" type="rail3:EntityILref" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The reference to the signal.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="refersToIndicator" type="rail3:IndicatorAndAspectRef" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Reference to any signal indicator with its aspect which is used as supplement to this signal for the complete aspect. There shall be one instance of this element for each indicator used together with this signal.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="showsAspect" type="rail3:EntityILref" minOccurs="1" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>The aspect the signal is showing. This is a reference to a defined aspect for the &lt;specificInfrastructureManager&gt;.&#xD;
This shall be only one aspect of the signal itself. Any supplementary aspects shall be covered in the &lt;refersToIndicator&gt; element.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="SignalAndGivenAspect">
		<xs:annotation>
			<xs:documentation>the tuple of references to the signal and its aspect plus the level of enforcement</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:AssetAndGivenState">
				<xs:sequence>
					<xs:element name="relatedSignalAndAspect" type="rail3:SignalAndAspect" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>the tuple of references to the signal and its aspect</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="SignalBox">
		<xs:annotation>
			<xs:documentation>The SignalBox (single interlocking) is a vital and fail-safe system. It accepts commands from operation control systems and reads the status of field elements. The interlocking controls a set of track assets and system assets to safely guide and control train movement. This logic reflects the railway rules and regulations.&#xD;
Interlocking logic may be implemented in terms of mechanically interlocking bars, relay circuitry or computer programs. &#xD;
This is the master class that must be instantiated for a specific interlocking system that controls a specific yard.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:ComputerNode">
				<xs:sequence>
					<xs:element name="controlsSystemAsset" type="rail3:SystemAssetConnectedToIL" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>The references to the system assets the interlocking controls</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="controlsTrackAsset" type="rail3:TrackAssetConnectedToIL" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>The interlocking carries a list of (references to) track assets that this interlocking controls. The controlled object has an attribute indicating the Level of Control which is most often ‘full control’. Track assets that aren't controlled by the interlocking, e.g. field controlled level crossing or open track elements can be tagged with levelOfControl='none'. </xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="controlsRoute" type="rail3:EntityILref" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>The reference to the routes the interlocking controls</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="controlsCombinedRoute" type="rail3:EntityILref" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>The reference to the combined routes the interlocking controls</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="controlsInterface" type="rail3:InterlockingInterface" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>The references to the interfaces to other interlockings</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="controlledBy" type="rail3:EntityILref" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>The references to the controllers which can control this interlocking</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="implementsSignalplan" type="rail3:SignalPlan" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>The references to the signal plans the interlocking uses</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="implementsElementGroup" type="rail3:ElementGroup" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>The references to the element groups which are configured for this interlocking</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="hasPermissionZone" type="rail3:EntityILref" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>The reference to any permission zone within the area controlled by this interlocking.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="hasConflictingRoutes" type="rail3:EntityILref" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>The references to the conflicting routes the interlocking knows</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="hasConfiguration" type="rail3:Configuration" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Basic information of the interlocking configuration</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="hasCommand" type="rail3:CodedEntityILref" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>References to pre-defined operator commands available for this element.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="hasIndication" type="rail3:CodedEntityILref" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>References to pre-defined indications available for this element.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="connectedToRadioBlockCentre" type="rail3:EntityILref" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Reference to any radioBlockCenter this signalBox is connected to.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="SignalBoxes">
		<xs:annotation>
			<xs:documentation>container element for all signalBox elements</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="signalBox" type="rail3:SignalBox" minOccurs="1" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Container with the characteristics of an individual interlocking system.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="SignalDelayTime">
		<xs:annotation>
			<xs:documentation>Timer that maintains a signal at stop for a given duration after the level crossing was triggered.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:BasicEntityIL">
				<xs:sequence>
					<xs:element name="hasDelayedSignal" type="rail3:EntityILref" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The reference to the signal.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="delay" use="required" type="xs:duration">
					<xs:annotation>
						<xs:documentation>Time during which the signal remains closed. Starts counting when the level crossing is triggered.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="SignalIL">
		<xs:annotation>
			<xs:documentation>A signal has an identity attribute, a reference to a signal or sign defined in the RTM scheme. A sign (or ETCS markerboard) indicating a speed change may well be modelled as a signal because the interlocking is likely to issue a different speed code at that sign</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:TrackAsset">
				<xs:sequence>
					<xs:element name="refersTo" type="rail3:EntityILref" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The reference to the physical trackside signal.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="protectsBlockExit" type="rail3:EntityILref" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>reference to the train detection element delimiting station and open block line, which can be reached from this signal by exit route</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="hasRepeater" type="rail3:RepeaterSignal" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>reference to any repeater signal associated with this signal with function not "repeater", i.e. repeater shall not refer to other repeater</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="hasIndicator" type="rail3:EntityILref" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>reference to any additional signal indicator used for some aspects of this signal</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="hasRouteStatusIndicator" type="rail3:EntityILref" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>reference to virtual logical object used for indication of route status on HMI (route indicators)</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="hasLamp" type="rail3:LampRefSignal" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Reference to the signal lamps installed on the screen</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="allowsAspect" type="rail3:EntityILref" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>The list of possible aspects the signal can show.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="approachSpeed" use="optional" type="rail3:tSpeedKmPerHour">
					<xs:annotation>
						<xs:documentation>The maximum speed in km/h with which a train can approach the signal. This matches the Ka of the previous (=upstream) signal or speed sign. This is suitable for defining the line speed profile.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="callOnAspectTime" use="optional" type="xs:duration">
					<xs:annotation>
						<xs:documentation>time for duration to show call-on aspect on this signal</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="function" use="optional" type="rail3:tSignalFunctionListExt">
					<xs:annotation>
						<xs:documentation>Function of the signal for usage by the interlocking. This is in addition to signalType in infrastructure.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="isNotWired" use="optional" type="xs:boolean">
					<xs:annotation>
						<xs:documentation>Often, users label signals virtual. A virtual signal can be a dummy-signal that is a software object in the interlocking but has no physical trackside presence marked in SignalIS@virtual. Such virtual signals can be useful for modelling speed steps; there need not be a physical signal but the interlocking enforces a different speed at the position of the virtual signal. The other way round, stand-alone boards that are not wired to the interlocking can be labelled with this attribut. Such stand-alone signals are of interest to simulations because when they affect driver behaviour thus influence train runs.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="malfunctionSpeed" use="optional" type="rail3:tSpeedKmPerHour">
					<xs:annotation>
						<xs:documentation>This constant indicates the maximum speed in km/h with which a train may travel past a failed signal. The malfunctioning signal cannot be opened.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="passingSpeed" use="optional" type="rail3:tSpeedKmPerHour">
					<xs:annotation>
						<xs:documentation>Maximum speed in km/h beyond the signal. This is suitable for defining the line speed profile.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="releaseDelay" use="optional" type="xs:duration">
					<xs:annotation>
						<xs:documentation>Time to elapse between receiving the revocation command and before route release.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="releaseSpeed" use="optional" type="rail3:tSpeedKmPerHour">
					<xs:annotation>
						<xs:documentation>Release speed in km/h from controlled braking curve.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="sightDistance" use="optional" type="rail3:tLengthM">
					<xs:annotation>
						<xs:documentation>The distance in metres the signal is visible in advance by the train driver. This might influence reaction times on changing aspects for simulation.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="withShuntingFunction" use="optional" type="xs:boolean">
					<xs:annotation>
						<xs:documentation>Flag which indicates that this signal with normal main signal function also includes a shunting function&#xD;
This is used in replacement of the deprecated signal@function "main+shunting".</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="SignalIndicator">
		<xs:annotation>
			<xs:documentation>Definition of an additional signal indicator (de: Zusatzanzeiger) which is used together with a signal for some aspects. It may also appear on HMI near the related signal.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:IndicatingObject">
				<xs:sequence>
					<xs:element name="refersTo" type="rail3:EntityILref" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Reference to the physical signal object in functional infrastructure representing the indicator.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="hasLamp" type="rail3:LampRefSignal" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Reference to the signal lamps installed on the indicator</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="allowsAspect" type="rail3:EntityILref" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>The list of possible aspects the signal indicator can show.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="indicatorType" use="optional" type="rail3:tSignalIndicatorsListExt">
					<xs:annotation>
						<xs:documentation>The type of the additional signal indicator which appears on the HMI near the signal.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="isNotWired" use="optional" type="xs:boolean">
					<xs:annotation>
						<xs:documentation>The indicator is physically present as a board, which has only one aspect. Thus it cannot be steered from the interlocking but has to be considered for correct aspect calculation by interlocking.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="SignalIndicators">
		<xs:annotation>
			<xs:documentation>Container for additional signal indicators which appears on the HMI near the signal.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="signalIndicator" type="rail3:SignalIndicator" minOccurs="1" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Definition of an additional signal indicator (de: Zusatzanzeiger) which is used together with a signal for some aspects. It may also appear on HMI near the related signal.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="SignalLamps">
		<xs:annotation>
			<xs:documentation>Definition of lamp units used within signals as seen by interlocking system. Thus several individual bulbs/LED used always together and electrically combined are considered as one lamp for the steering purpose, e.g. light stripe made of three single bulbs as used in OSShD-systems.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:EntityIL">
				<xs:sequence>
					<xs:element name="name" type="rail3:Name" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>individual name of the lamp</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="colour" use="optional" type="rail3:LampColourListExt">
					<xs:annotation>
						<xs:documentation>Colour used for the lamp</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="power" use="optional" type="rail3:tPowerWatt">
					<xs:annotation>
						<xs:documentation>The power consumption of the lamp unit.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="type" use="optional" type="rail3:LampTypeListExt">
					<xs:annotation>
						<xs:documentation>The type/technology of lamp used.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="voltage" use="optional" type="rail3:tVoltageVolt">
					<xs:annotation>
						<xs:documentation>The voltage to drive the signal lamp unit.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="SignalPlan">
		<xs:annotation>
			<xs:documentation>The signalplan describes a set of aspect relations. &#xD;
In speed signalling systems, the aspect relation between signals represents a speed profile that the train must respect.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:BasicEntityIL">
				<xs:sequence>
					<xs:element name="aspectRelation" type="rail3:AspectRelation" minOccurs="1" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>One aspect relation has a) one master signal showing a given aspect b) one or more slaves showing a given aspect. The slave aspect depends on the master aspect. c) an optional overlap when the master aspect is at danger. The path from slave to master may contain switches. The switch positions are given in order to unequivocally determine the path.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="SignalsIL">
		<xs:annotation>
			<xs:documentation>container element for all SignalIL elements</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="signalIL" type="rail3:SignalIL" minOccurs="1" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>The signal is a track asset used to transmit information to the train driver represented by its optical appearance.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="SignalWithAspect">
		<xs:annotation>
			<xs:documentation>reference to any signal and its aspect inside or outside the restricted area required for use and/or protection</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:EntityIL">
				<xs:sequence>
					<xs:element name="givenAspect" type="rail3:SignalAndGivenAspect" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>the tuple of references to the signal and its aspect plus the level of enforcement</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="protectingSide" use="optional" type="rail3:tProtectingSideList">
					<xs:annotation>
						<xs:documentation>indication whether the required aspect is for protection of the area from inside or outside</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="StationIndicator">
		<xs:annotation>
			<xs:documentation>Virtual logical object used for indication and commanding of station related groups or zones on HMI</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:IndicatingObject">
				<xs:sequence>
					<xs:element name="belongsToOperationalPoint" type="rail3:EntityILref" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>reference to the Operational Point the station indicator belongs to</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="usedFor" use="required" type="rail3:tStationZonesListExt">
					<xs:annotation>
						<xs:documentation>defines the use of this indicator for a particular station zone or group of elements represented by this zone</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="StationIndicators">
		<xs:annotation>
			<xs:documentation>container for virtual logical object used for indication and commanding of station related groups or zones on HMI</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="stationIndicator" type="rail3:StationIndicator" minOccurs="1" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Individual virtual logical object used for indication and commanding of station related groups or zones on HMI</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="SwitchAndGivenPosition">
		<xs:annotation>
			<xs:documentation>the tuple of references to the switch and its position plus the level of enforcement</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:AssetAndGivenState">
				<xs:sequence>
					<xs:element name="relatedSwitchAndPosition" type="rail3:SwitchAndPosition" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>the tuple of references to the switch and its position</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="SwitchAndPosition">
		<xs:annotation>
			<xs:documentation>A tuple (Switch, position). This refers to a switch and its position (left/right).</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:AssetAndState">
				<xs:sequence>
					<xs:element name="refersToSwitch" type="rail3:EntityILref" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The reference to the switch.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="inPosition" use="required" type="rail3:tSwitchPosition">
					<xs:annotation>
						<xs:documentation>The position the switch is in.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="SwitchesIL">
		<xs:annotation>
			<xs:documentation>container for all switchIL elements</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="switchIL" type="rail3:SwitchIL" minOccurs="1" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>The switch is a track asset where a train can change from one track to another. Here the functional aspects for interlocking operation are considered.&#xD;
Extends the infrastructure::switch for IXL purposes. The graph model from RailTopoModel allows the definition of connections between tracks. Thus, one can include or exclude connections between tracks. The name SwitchIL is chosen to reconcile US nomenclature and to avoid a naming conflict with infrastructure domain.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="SwitchIL">
		<xs:annotation>
			<xs:documentation>Extends the infrastructure::switch for IXL purposes. The graph model from RailTopoModel allows the definition of connections between tracks. Thus, one can include or exclude connections between tracks. The name SwitchIL is chosen to reconcile US nomenclature and to avoid a naming conflict with infrastructure domain.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:MovableElement">
				<xs:sequence>
					<xs:element name="hasFoulingTrainDetectors" type="rail3:EntityILref" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>This is the reference to any train detection device in infrastructure which is located to close to the switch, i.e. the gauge of the switch is not clear when the associated neighbouring TVD section is occupied.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="branchLeft" type="rail3:EntityILref" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the reference to the underlying track section in infrastructure of the left branch. This reference may be provided as reference to a &lt;trackIL&gt; or to a &lt;netElement&gt;. It is however encouraged to use references to &lt;netElement&gt; here, as it is the more general solution and is forseen to be the only remaining allowed type of reference from 3.4 onward.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="branchRight" type="rail3:EntityILref" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the reference to the underlying track section in infrastructure of the right branch.&#xD;
This reference may be provided as reference to a &lt;trackIL&gt; or to a &lt;netElement&gt;. It is however encouraged to use references to &lt;netElement&gt; here, as it is the more general solution and is forseen to be the only remaining allowed type of reference from 3.4 onward.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="branchTip" type="rail3:EntityILref" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the reference to the underlying track section in infrastructure of the tip branch. Especially in case of switch crossing this element is not used.&#xD;
This reference, if given, may be provided as reference to a &lt;trackIL&gt; or to a &lt;netElement&gt;. It is however encouraged to use references to &lt;netElement&gt; here, as it is the more general solution and is forseen to be the only remaining allowed type of reference from 3.4 onward.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="hasPositionRestriction" type="rail3:SwitchPositionRestriction" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>It defines the position the related element shall have when the switch is to be switched in the given position.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="preferredPosition" use="optional" type="rail3:tSwitchPosition">
					<xs:annotation>
						<xs:documentation>This is the preferred position of the switch which it is switched to when not in use or in case of both positions required for flank protection.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="SwitchInPosition">
		<xs:annotation>
			<xs:documentation>reference to any switch and its position inside or outside the restricted area required for use and/or protection</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:EntityIL">
				<xs:sequence>
					<xs:element name="givenPosition" type="rail3:SwitchAndGivenPosition" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>the tuple of references to the switch and its position plus the level of enforcement</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="protectingSide" use="optional" type="rail3:tProtectingSideList">
					<xs:annotation>
						<xs:documentation>indication whether the required position is for protection of the area from inside or outside</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="SwitchPositionRestriction">
		<xs:annotation>
			<xs:documentation>For some relations between movable elements restrictions apply concerning the combination of both elements positions.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:BasicEntityIL">
				<xs:sequence>
					<xs:element name="relatedSwitchInPosition" type="rail3:SwitchAndPosition" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the reference and the state/position of the other switch of the relation.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="relatedDerailerInPosition" type="rail3:DerailerAndPosition" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the reference and the state/position of the derailer of the relation.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="restrictedPosition" use="required" type="rail3:tSwitchPosition">
					<xs:annotation>
						<xs:documentation>This is the position to be set which requires the other element has the named state/position first.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="SwitchRelatedDelay">
		<xs:annotation>
			<xs:documentation>The position of a switch can influence the activation delay.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:SwitchAndPosition">
				
				<xs:attribute name="delay" use="required" type="xs:duration">
					<xs:annotation>
						<xs:documentation>The delay for activation to be considered when the switch is in the specified position.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="SystemAsset">
		<xs:complexContent>
			<xs:extension base="rail3:EntityIL">
				<xs:sequence>
					<xs:element name="hasName" type="rail3:Name" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>particular name and description of the system asset dependent on language</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="belongsToOperationalPoint" type="rail3:EntityILref" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>reference to the Operational Point the system asset is related to</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="belongsToInfrastructureManager" type="rail3:EntityILref" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>reference to the infrastructure manager the asset belongs to, not needed if asset is under &lt;assetsForInterlocking&gt;</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="hasCommand" type="rail3:CodedEntityILref" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>The reference to any possible predefined command of this element.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="hasIndication" type="rail3:CodedEntityILref" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>The reference to any possible predefined indication of this element.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="elementNumber" use="optional" type="xs:unsignedLong">
					<xs:annotation>
						<xs:documentation>element number of the asset for internal reference in engineering data</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="model" use="optional" type="xs:string">
					<xs:annotation>
						<xs:documentation>The model name of the asset from the supplier.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="softwareVersion" use="optional" type="xs:string">
					<xs:annotation>
						<xs:documentation>The software version of the asset itself.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="SystemAssetConnectedToIL">
		<xs:annotation>
			<xs:documentation>List of System Assets that are connected to a specific interlocking. These system assets are at least known to the interlocking.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:BasicEntityIL">
				<xs:sequence>
					<xs:element name="connectedSystemAsset" type="rail3:EntityILref" minOccurs="1" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>The reference to the connected system asset. Available system assets include power supplies and object controllers</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="extentOfControl" use="optional" type="rail3:tExtentOfControl">
					<xs:annotation>
						<xs:documentation>The level of control of the asset by the interlocking.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="tElementWithIDandDesignator">
		<xs:complexContent>
			<xs:extension base="rail3:tElementWithID">
				<xs:sequence>
					<xs:element name="designator" type="rail3:Designator" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>The designator of the element, which is often a coded identification, e.g. 69W03 for a switch no. 03 in station 69. In case of "private" register use leading underscore.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="TrackAsset">
		<xs:annotation>
			<xs:documentation>A track element (e.g. signal, switch, TVD section), as defined in the IL namespace that is controlled or read by interlocking systems.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:EntityIL">
				<xs:sequence>
					<xs:element name="assetName" type="rail3:Name" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>name and description of the asset dependent on the language</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="belongsToOperationalPoint" type="rail3:EntityILref" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>reference to the Operational Point the asset is related to</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="hasCommand" type="rail3:CodedEntityILref" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>References to pre-defined operator commands available for this element.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="hasIndication" type="rail3:CodedEntityILref" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>References to pre-defined indications on HMI for the enclosing element.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="elementNumber" use="optional" type="xs:unsignedLong">
					<xs:annotation>
						<xs:documentation>element number for internal referencing in the engineering data</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="TrackAssetConnectedToIL">
		<xs:annotation>
			<xs:documentation>List of Track Assets that are connected to a specific interlocking. This list would typically be kept in one or more separate files. This approach allows the Infrastructure Manager to split the assets under control of a specific interlocking into different areas. Each area would be allocated a list of Track Assets Connected to the interlocking. This supports for instance a scenario in which an interlocking is split into several smaller ones during a resignalling project.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:BasicEntityIL">
				<xs:sequence>
					<xs:element name="connectedTrackAsset" type="rail3:EntityILref" minOccurs="1" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>The reference to the connected track asset.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="extentOfControl" use="optional" type="rail3:tExtentOfControl">
					<xs:annotation>
						<xs:documentation>The level of control of the asset by the interlocking.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="TrackIL">
		<xs:annotation>
			<xs:documentation>Instance of an interlocking track element. It has a 1:1-relation to a track element in functional infrastructure. It is included here for other assets in interlocking to refer here.&#xD;
A track is not necessarily identical with a TVD section. It is just a named length of track without branches within the network.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:TrackAsset">
				<xs:sequence>
					<xs:element name="refersTo" type="rail3:EntityILref" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>reference to track element in functional infrastructure</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="hasTvdSection" type="rail3:EntityILref" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>The reference to related TVD section(s) of the track.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="TracksIL">
		<xs:annotation>
			<xs:documentation>container for all track elements in IL part</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="trackIL" type="rail3:TrackIL" minOccurs="1" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Instance of an interlocking track element. It has a 1:1-relation to a track element in functional infrastructure. It is included here for other assets in interlocking to refer here.&#xD;
A track is not necessarily identical with a TVD section. It is just a named length of track without branches within the network.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TrainNumberField">
		<xs:annotation>
			<xs:documentation>virtual logical object used for indication of train numbers/IDs on HMI used by train management systems&#xD;
Per position the train number fields can be arranged as a stack in order to take more than one number for the position.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:IndicatingObject">
				<xs:sequence>
					<xs:element name="primaryInStack" type="rail3:tElementWithIDref" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>primary trainNumberField, which is always used first and released last</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="deleteOnLeave" use="optional" type="xs:boolean">
					<xs:annotation>
						<xs:documentation>Flag, whether the content of the train number field is deleted when the track element becomes empty</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="isAtBorder" use="optional" type="xs:boolean">
					<xs:annotation>
						<xs:documentation>Flag, whether this train number field is at a border, i.e. no next neighbouring train number field. This is only useful for the primary field as all others shall follow the primary one.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="numberInStack" use="optional" type="rail3:positiveLong">
					<xs:annotation>
						<xs:documentation>the number of this train number field in the stack starting with 1 for primary field</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="orientation" use="optional" type="rail3:tStackOrientation">
					<xs:annotation>
						<xs:documentation>the orientation the pile is stacked horizontally/vertically</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="usedForDirection" use="optional" type="rail3:tExtendedDirection">
					<xs:annotation>
						<xs:documentation>Direction dependent use of the train number field. The direction is in relation to the underlaying netElement.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="TrainNumberFieldRef">
		
		<xs:attribute name="refersToTrackElement" use="optional" type="rail3:tRef">
			<xs:annotation>
				<xs:documentation>The reference to a track element within this TVD section. It might be TrackIL, SwitchIL or MovableCrossing. The particular type can be derived from the relationOfStack attribute.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="refersToTrainNumberField" use="required" type="rail3:tRef">
			<xs:annotation>
				<xs:documentation>The reference to the primary train number field of a stack.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="relationToTrackElement" use="required" type="rail3:tStackRelation">
			<xs:annotation>
				<xs:documentation>The relation of the train number field to the extends of the track element. This is only useful for the primary field as all others shall follow the primary one.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="TrainNumberFields">
		<xs:annotation>
			<xs:documentation>container for virtual logical object used for indication of train numbers/IDs on HMI</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="trainNumberField" type="rail3:TrainNumberField" minOccurs="1" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>virtual logical object used for indication of train numbers/IDs on HMI</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TunnelGateAndGivenState">
		<xs:annotation>
			<xs:documentation>References to a particular tunnel gate and its required state to fulfil the route relation</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:AssetAndGivenState">
				<xs:sequence>
					<xs:element name="relatedToTunnelGateAndState" type="rail3:TunnelGateState" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>the tuple of references to the tunnel gate and its state</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="TunnelGateIL">
		<xs:annotation>
			<xs:documentation>The tunnel gate is a movable structure for completely closing the tunnel tube at the portal to cover the tunnel from bad weather conditions like icing or it intersects a tunnel to prevent ingress of water or smoke. It thus prevents train traffic in blockedClosed position. Dependent on train approach the gate is moved to passableOpen position. The gate movements and positions are controlled by the interlocking system in similar manner like a level crossing.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:TrackAsset">
				<xs:sequence>
					<xs:element name="refersTo" type="rail3:EntityILref" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The reference to tunnelGateIS in functionalInfrastructure.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="hasInterface" type="rail3:EntityILref" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The reference to the physical interface used to control the tunnel gate.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="deactivatedBy" type="rail3:BarrierDeactivator" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>The list of elements triggering the deactivation (closing into blocked position) of the tunnel gate.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="activationCondition" type="rail3:ActivationCondition" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>The conditions for activation (opening into passable position) of the tunnel gate.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="hasTvdSection" type="rail3:EntityILref" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>The reference to the TVD sections at the tunnel gate.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="hasGateSection" type="rail3:EntityILref" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>The reference to any trackIL elements at the tunnel gate. They are used to collect the activation and deactivation triggers.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="preferredPosition" use="optional" type="rail3:tGateStateList">
					<xs:annotation>
						<xs:documentation>The preferred position of the tunnel gate. For route dependent gates this would be the blocking position.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="typicalTimeToOpen" use="optional" type="xs:duration">
					<xs:annotation>
						<xs:documentation>The typical time required to open the tunnel gate, i.e. the time to bring the gate from blocking into the supervised open/passable position.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="TunnelGatesIL">
		<xs:annotation>
			<xs:documentation>contains all tunnelGateIL elements</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="tunnelGateIL" type="rail3:TunnelGateIL" minOccurs="1" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>The tunnel gate is a movable structure for completely closing the tunnel tube at the portal to cover the tunnel from bad weather conditions like icing or it intersects a tunnel to prevent ingress of water or smoke. It thus prevents train traffic in blockedClosed position. Dependent on train approach the gate is moved to passableOpen position. The gate movements and positions are controlled by the interlocking system in similar manner like a level crossing.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TunnelGateState">
		<xs:complexContent>
			<xs:extension base="rail3:AssetAndState">
				<xs:sequence>
					<xs:element name="refersToTunnelGate" type="rail3:EntityILref" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The reference to the tunnel gate.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="inState" use="required" type="rail3:tGateStateList">
					<xs:annotation>
						<xs:documentation>The state (blockingClosed/passableOpen) the tunnel gate has.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="TvdSection">
		<xs:annotation>
			<xs:documentation>A track vacancy detection (TVD) section reports train occupancy to the interlocking. This is a logical unit characterised by the delimiters of the section. Typically, a section is delimited by two insulated track joints or axle counters at the extremities. Sections with a switch or a crossing can have several such limits.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:TrackAsset">
				<xs:sequence>
					<xs:element name="hasDemarcatingBufferstop" type="rail3:EntityILref" minOccurs="0" maxOccurs="2">
						<xs:annotation>
							<xs:documentation>Reference to physical track ends, e.g. buffer stop, as limit of the section.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="hasExitSignal" type="rail3:EntityILref" minOccurs="0" maxOccurs="2">
						<xs:annotation>
							<xs:documentation>Reference to delimiting signals for leaving the TVD section.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="hasDemarcatingTraindetector" type="rail3:EntityILref" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Reference to the physical train detection points, e.g. axle counter point, insulated rail joint, used as limit of the section.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="hasResetStrategy" type="rail3:EntityILref" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Reference to the Infrastructure Manager specific reset strategy for this TVD section.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="hasTrainNumberField" type="rail3:TrainNumberFieldRef" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Reference to the train number field(s) for this TVD section</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="hasTrackElement" type="rail3:EntityILref" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>reference to any track asset (trackIL, switchIL, derailerIL, movableCrossing) in IL part</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="frequency" use="optional" type="rail3:tFrequencyHertz">
					<xs:annotation>
						<xs:documentation>The frequency in Hertz used for the TVD section in case of a track circuit. Shall be zero for direct current.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="isBerthingTrack" use="optional" type="xs:boolean">
					<xs:annotation>
						<xs:documentation>True, if this section is part of a berthing track, i.e. track where trains may halt and change direction. Typically, an Interlocking assures that trains progress from section to section in an ordered sequence (aka. two/three phase release). This check would fail when a train changes direction. If this attribute is true, the interlocking doesn't carry out this check for this section.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="partialRouteReleaseDelay" use="optional" type="xs:duration">
					<xs:annotation>
						<xs:documentation>Delay time after which the section may be released for use in a new route</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="residualRouteCancellationDelay" use="optional" type="xs:duration">
					<xs:annotation>
						<xs:documentation>The delay after which the interlocking may clear a partial route left by an unusual train run. The timer starts running when the interlocking accepts the signal man request to clear the section (DE: Restfahrstrasse auflösen) or when the interlocking algorithm detects that the train has set back (automatic route release).</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="technology" use="optional" type="rail3:tTvdSectionTechnologyTypeExt">
					<xs:annotation>
						<xs:documentation>The technology used for the TVD section to detect the presence or absence of rail vehicles. </xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="TvdSections">
		<xs:annotation>
			<xs:documentation>container element for all TvdSection elements</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="tvdSection" type="rail3:TvdSection" minOccurs="1" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>A track vacancy detection (TVD) section reports train occupancy to the interlocking. This is a logical unit characterised by the delimiters of the section. Typically, a section is delimited by two insulated track joints or axle counters at the extremities. Sections with a switch or a crossing can have several such limits.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="WorkZone">
		<xs:annotation>
			<xs:documentation>A set of track assets that track workers or the signalman can set apart from the main line. When taken, it is impossible to call regular routes into this work zone.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="rail3:RestrictedArea">
				<xs:sequence>
					<xs:element name="activationLock" type="rail3:EntityILref" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>reference to any locking device used for activation and deactivation of the work zone</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="switchInPosition" type="rail3:SwitchInPosition" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>reference to any switch and its position inside or outside the work zone required for use and/or protection</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="derailerInPosition" type="rail3:DerailerInPosition" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>reference to any derailer and its position inside or outside the work zone required for use and/or protection</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="crossingInPosition" type="rail3:CrossingInPosition" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>reference to any movable crossing and its position inside or outside the work zone required for use and/or protection</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="detectorInState" type="rail3:DetectorInState" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>reference to any detector and its state inside or outside the work zone required for use</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="signalWithAspect" type="rail3:SignalWithAspect" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>reference to any signal and its aspect inside or outside the work zone required for use and/or protection</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="keyLockInState" type="rail3:KeyLockInState" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>reference to any key log and its state inside or outside the work zone required for use and/or protection</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="levelCrossingInState" type="rail3:LevelCrossingInState" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>reference to any level crossing and its state inside the work zone required for use</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="releasedForLocalOperation" type="rail3:EntityILref" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>reference to any switchable element (keylock, switch, derailer, level crossing etc.), which is released for local operation, when the work zone is active</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="WorkZones">
		<xs:sequence>
			<xs:element name="workZone" type="rail3:WorkZone" minOccurs="1" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>A set of track assets that track workers or the signalman can set apart from the main line.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
</xs:schema>